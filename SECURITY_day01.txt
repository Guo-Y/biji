ftp://172.40.50.117/2018/soft  软件
ftp://172.40.50.117/nsd1812/all_note.txt  随堂文档

vns  172.40.50.117  7000

第三阶段 课程内容 
一、数据库管理15天  数据管理员    DBA
1.1  RDBMS:  MySQL 10天
1.2  NoSQL:  Redis 3天  和 MongoDB 2天

二、安全与监控 6天
2.1 安全 ： 系统安全  服务安全  数据安全  网络安全 
2.2 监控 :  zabbix服务的使用


庞丽静  静静
panglj@tedu.cn 
++++++++++++++++DBA1_DAY03+++++++++

   一台车 
   轮胎  备胎  车架子  真皮座椅 内饰  方向盘  发动机*   

一、MySQL存储引擎
	1.1 MySQL存储引擎介绍
		1.1.1 MySQL体系结构 （8个组件）
		管理工具： MySQL自带的命令 
		连接池： 验证用户连接和检查系统资源
		SQL接口： 把sql命令传给mysqld进程处理
		分析器： 检查sql命令语法
		优化器： 对执行的sql命令优化
		查询缓存： 存储查找过的数据(8MB 从物理内存划分出来的)
		存储引擎：处理表的处理器，不同的存储引擎有不同的功能和
			  数据存储方式
		文件系统 ： 机器的硬盘

		1.1.2 存储引擎介绍 ?

	1.2 查看存储引擎
		1.2.1 查看已有表的使用存储引擎
			mysql> use userdb;
			mysql> show create table 表名\G;
			mysql> show  create table  user\G;


		1.2.1 查看数据库服务默认使用的存储引擎
		    	mysql> show engines;
	
		1.3 修改存储引擎
			1.3.1 修改数据库服务默认使用的存储引擎
				]# systemctl  stop mysqld						     ]# vim /etc/my.cnf
				  [mysqld]
				    default-storage-engine=myisam
				 :wq
				]# systemctl  start mysqld
				]# mysql -uroot -p密码
				mysql>  show engines;
				
			1.3.2 修改表使用的存储引擎
				mysql> alter table  t7 engine=myisam;

			1.3.3 建表时指定表使用的存储引擎 
				create  table t8 (name char(10))
				engine=innodb;

	1.4 常用存储引擎特点
		1.4.1 MYISAM存储引擎特点
			支持表级锁
			不支持外键、事务、事务回滚
			表文件个数
				表名.frm   表名.MYD  表名.MYI
				表结构      数据    index信息

		1.4.2 INNODB存储引擎特点
			支持外键 
			支持行级锁
			支持事务和事务回滚
			事务特点
			表文件个数 
				表名.frm  t6.ibd
				表结构    数据+index信息
	        1.4.3 术语解释	
			外键  
			行级锁 
			表级锁
			事务     登陆  数据操作 断开连接	
			事务回滚 ：在访问过程中，任意一步操作失败，恢复之前的所有操作
			
			事务日志文件：记录对所有innodb存储引擎表的操作
				ibdata1  没有提交的命令

				已经提交的命令
				ib_logfile0
				ib_logfile1

			事务特性：ACID
				  原子性 一致性  隔离性  持久性

		休息10分钟 到 10：16 

	1.5 工作中建表时，如何决定表使用那种存储引擎？
		select 操作多的表 ，适合使用myisam存储引擎 优点节省系统资源
  insert/update/delete 操作多的表 ,适合使用innodb存储引擎  优点并发访问量大		


二、数据导入导出
	2.0  数据导入导出默认检索目录
		2.0.1 查看默认检索目录名称
			mysql> show variables  like  "secure_file_priv";
			+------------------+-----------------------+
			| Variable_name    | Value                 |
			+------------------+-----------------------+
			| secure_file_priv | /var/lib/mysql-files/ |
			+------------------+-----------------------+
		2.0.2  修改默认检索目录名称
			]# mkdir  /mydata
  			]# chown  mysql  /mydata
  			]#  vim /etc/my.cnf
	    			[mysqld]
				secure_file_priv="/mydata"
			:wq

			]# systemctl  stop mysqld
			]# systemctl  start mysqld
			]# mysql -uroot -p123qqq...A
			mysql> show variables  like  "secure_file_priv";

	2.1  数据导入：把系统文件的内容存储到数据库的表里
		2.1.1 命令格式
                 mysql>  load  data  ifile  "目录名/文件名" into table
			 数据库名.表名 FIELDS TERMINATED BY   "分隔符"
			 LINES TERMINATED BY   "\n";

		2.1.2 步骤
			1 把系统文件拷贝到检索目录下
			2 根据导入文件的内容创建表
			3 执行数据导入命令

		2.1.3 例子
mysql> create database db9;

mysql> create  table  user9.user(
    -> username char(50),
    -> password char(1),
    -> uid int,
    -> gid int,
    -> comment  char(150),
    -> homedir  char(180),
    -> shell  char(50)
    -> );

mysql> system  cp /etc/passwd  /var/lib/mysql-files/

mysql> load data infile "/var/lib/mysql-files/passwd" into table db9.user 
    -> fields terminated by ":" lines terminated by "\n";

mysql> alter table db9.user  add 
    -> id int  primary key  auto_increment first;

mysql> select  * from  userdb.user;

休息到 10：15 

	2.2  数据导出：把数据库的表里的记录存放到系统文件
		2.2.1 命令格式
		mysql> SQL查询 into   outfile   "目录名/文件名";
		
		mysql> SQL查询 into   outfile   "目录名/文件名"
		       fields  terminated   by   "列分隔符"
		       lines terminated   by   "行分隔符";

      		2.2.2 例子
mysql> select * from  userdb.user  into outfile "/mydata/a1.txt";

mysql> select username,shell from  userdb.user  
       into outfile "/mydata/a2.txt";

mysql> select username,shell from  userdb.user where id<=3  
       into outfile "/mydata/a3.txt"  
       fields terminated  by  "#"  lines terminated  by  "???";

]# ls /mydata

]# vim /mydata/a1.txt
]# vim /mydata/a2.txt
]# vim /mydata/a3.txt
                       练习到 10:38
三、管理表记录
	3.1 插入表记录insert into
	 	1 向表中插入1条记录给所有字段赋值
		  insert into  库名.表名  valuse(字段值列表);
mysql> insert into  userdb.user 
values
(43,"bob","x",2000,2000,"test user","/home/bob","/bin/bash");

		2 向表中插入多条记录给所有字段赋值
		   2.1 命令格式 
                   insert into  库名.表名
		   values
		   (字段值列表),(字段值列表),(字段值列表);
		   2.2 例子
			mysql> insert into  userdb.user 
				values
	(443,"lili","x",2000,2000,"test user","/home/bob","/bin/bash"),
	(44,"lucy","x",2000,2000,"test user","/home/bob","/bin/bash");

		3 向表中插入1条记录给个别字段赋值
		   3.1 命令格式
			insert into  库名.表名(字段名列表)values(值列表);
		   3.2 例子
			mysql> insert  into userdb.user(username,shell) 
       			values("jack","/sbin/nologin");

		4 向表中插入多条记录给个别字段赋值
		  4.1 命令格式
			insert into  库名.表名(字段名列表)
			values(值列表),(值列表),(值列表);
		  4.2 例子
			insert  into userdb.user(username,shell)
			values
			("jack","/sbin/nologin"),
			("jerry","/sbin/nologin"),
			("alice","/sbin/nologin");

	3.2 查询表记录
		3.2.1 命令格式
		      select  字段名列表 from 库名.表名 [where 条件]；

		2.2.2 例子
mysql> select  * from userdb.user;
mysql> select  username,homedir from userdb.user where id <=2;
mysql> select  * from userdb.user where id <=2;

休息到 11：15

	3.3  更新表记录 update
		3.3.1 命令格式
		update  库名.表名 set 字段名=值，字段名=值 【where 条件】；
		
		3.3.2 例子
		mysql> update  userdb.user set password="a" ;

		mysql> update  userdb.user set password="x" 
		       where username="root" ;
	3.4 删除表记录 
		3.4.1 命令格式
			delete from 库名.表名【 where 条件 】;
		3.4.2 例子
		mysql> select  * from userdb.user where username="bob";
		mysql> delete from userdb.user;

四、匹配条件 （select  update  delete）
	4.1 基本匹配条件
	    4.1.1 数值比较 >  >=  <  <=  =  != 
			where  字段名 符号  数字
		select  name ,uid  from user where uid <= 10;
		select username,uid,gid from user where uid = gid;
		select  name ,uid  from user where id = 10;

	    4.1.2  字符比较 =  !=
			where  字段名 符号 "字符串"；
		select username,shell from user where  shell!="/bin/bash";
		select username from user where  username="root";

	   4.1.3 匹配空/非空
			where  字段名 is null;
			where  字段名 is not null;
		select username,gid from user where gid is null;
		select username,gid from user where gid is not  null;

	   4.1.4 逻辑匹配 (多个判断条件)
		 and  逻辑与 多个判断条件必须同时成立
		 or   逻辑或 多个判断条件某一条件成立即可
		 ! 或 not 逻辑非  取反
select  * from user where  username="bin"  and uid=3 and shell="/bin/bash";
select  * from user where  username="root"  and uid=0 ;
  
select  * from user where  username="bin"  or uid=3 or shell="/bin/bash";
	
	 4.1.5 范围内匹配/去重显示
		in  			在...里
		not 			不在...里
		between ....and... 	在...之间
		disinct  		去重显示

		select username from user 
			where username in ("adm","sync","root","mysql");

		select username,uid from user 
		 	where uid in (11,29,1000,33,7);

		select username,shell from user 
			where shell not in ("/bin/bash","/sbin/nologin");

		select  * from user where  id between 5 and 10;
	
		select  distinct  shell  from user;
		select  distinct  gid  from user;
		() 提高判断优先级
	4.2 高级匹配条件
		4.2.1 模糊查询 like
			where 字段名  like   '通配符';
			_  匹配单个字符
			%  匹配0~N个字符
		  select username from user where  username like '____';
		  select username from user where  username like '_____';
		  select username from user where  username like '%a%';
		  select username from user where  username like '__%__';

		4.2.2 正则表达式
			元字符  ^ $  . *  []
			where 字段名  regexp   '正则表达式’;

	   select username , uid  from user  where  uid  regexp '^....$';
	   select username   from user  where  username  regexp 't$';
	   select username   from user  where  username  regexp '^r.*t$';
	
           insert into user(username)
	      values("2yaya"),("ya5ya"),("yay8a"),("yaya7");
	
           select username   from user  where  username  regexp '[0-9]';
		4.2.3  四则运算
		       计算符号  +  -  *  /  %

		update user set gid=gid+1 where id <= 5;
	
		select username,uid+gid xjz  
                       from user where  username="root";

		alter table  user add age tinyint  default 29  
		      after username;

		select username,2019-age  csnf from 
                      user where  username="root";

		() 提高执行的优先级

		  select username,uid,gid,(uid+gid)/2  pjz from 
			user where username="bin";

	4.3 操作查询结果
		4.3.1 聚集函数(mysql服务软件自带的对数据做统计的命令)
			avg(字段名)			//统计字段平均值
			sum(字段名) 			//统计字段之和
			min(字段名) 			//统计字段最小值
			max(字段名) 			//统计字段最大值
			count(字段名) 			//统计字段值个数
			select  avg(uid)  from user ;
			select  avg(uid)  from user where id  <=10;
	
			select  sum(uid)  from user;
			select  min(uid) from user where shell!="/bin/bash";
			select  max(uid) from user where shell!="/bin/bash";

		select count(username) from user where shell!="/bin/bash";
		select count(username) from user;
		select count(*) from user;

		练习10分钟到 15：32  休息到 

		4.3.2 查询结果排序 order by  
		      SQL查询  order   by   字段名   [ asc | desc ];

			select username,uid from user 
				where uid between 10 and 1000 
				order  by  uid;

			select username,uid from user 
				where uid between 10 and 1000 
				order  by  uid desc;

		4.3.3 查询结果分组  group by  字段名

			select shell from user group by shell;

			select shell from user where  uid <=1000 
				group by shell;

		4.3.4 查询结果过滤 having 
			SQL查询   having   条件表达式;
			SQL查询   where   条件   having   条件表达式;
			SQL查询   group   by   字段名   having   条件表达式;
select username from user where shell!="/bin/bash" having username="gdm";
select username from user  where uid <=1000 and   username="gdm";
select username from user  where uid <=1000 having username="gdm";
			select shell from  user where shell!="/bin/bash" 
				group by shell having shell="/bin/sync";

	   4.3.5 限制查询结果显示行数limit
			SQL查询  limit  N; 	//显示查询结果前N条记录
                        SQL查询  limit  N,M; 	//显示指定范围内的查询记录

	   select  * from user where  uid >=10 and  uid<=500 limit 3;

	   select  id,username,homedir from user 
		 where  uid >=10 and  uid<=500 limit 3,3;
		 
		select username,uid,homedir from user where uid >1000  
			order by  uid  desc  limit 1;

+++++++++++++++++++DBA1_DAY04++++++++++++++++++++

	 学号  姓名
 缴费表   9     张三丰
 班级表   9
 成绩表   9
 就业表   9


 select name from 班级表 where  name not in  (select name from 缴费表 where 班级="nsd1812");


select username from userdb.user where username in (select username from db4.t1);

会使用1张表存储所有的信息吗？ 





一、多表查询
	1.1 复制表
		1.1.0 命令格式
			create  table 库名.表名  SQL查询；

		1.1.1 作用1 备份表
				create database  db4;
				use db4;
			create table  user2  select * from userdb.user;
			show tables;
			select count(*) from user2;
			select *  from user2;

		1.1.2 作用2 快速建表
			use  db4;
			create table user3  
			     select  * from  userdb.user where  11 <= 10;

			show  table;
			select  * from  user3;
			desc  user3;

	1.2 多表查询介绍
		将2个或2个以上的表 按某个条件连接起来，从中选取需要的数据
当多个表中 存在相同意义的字段（字段名可以不同）时，可以通过该字段连接多个表

	休息到 11：30 上课

	1.3 多表查询 命令用法
	     格式1
		select  字段名列表 from 表名列表; 笛卡尔集
						表记录行数相乘的积
  
		select  字段名列表 from 表名列表 [where  条件]；
						只显示表中与条件匹配的记录
	     例子：
		create table t1  select username,uid,password 
		from userdb.user limit 3;

		create table t2 select username,uid,shell,homedir 
		from userdb.user limit 5;

		select  *  from t1;
		select  *  from t2;

		select  * from t1,t2;
		select  * from t1,t2  where  t1.uid = t2.uid ;

		select  * from t1,t2 
			where  t1.uid = 1  and t2.uid = 1  ;

		select  t1.* , t2.shell , t2.homedir  
		from t1,t2 
		   where  t1.uid = 1  and t2.uid = 1 ;  


	 格式2  where子查询:把内层查询结果作为外层查询的查询条件
                select  字段名列表 from 表名  
                  where  
                条件 （select  字段名列表 from 表名  where  条件）;

	例子：
	update userdb.user set age=19 where  id <= 10;
	update userdb.user set age=36  where  id > 10  and  id  <= 40;
	
	select username,age from userdb.user 
            where age <  (select  avg(age) from  userdb.user ) ;
	
	select username from db4.t1 where uid <=2;

	select username from userdb.user 
          where username in (select username from db4.t1 where uid<= 2 );
                
	格式3  左连接 查询条件成立时，以左边的表为主显示查询结果
		select  字段名列表   from   
                    表a   left   join  表b   on   条件表达式；

	格式4  右连接 查询条件成立时，以右边的表为主显示查询结果
		select  字段名列表   from 
			表a  right join 表b on   条件表达式；
	例子：
	create  table  t3  
		select username,uid,homedir,password from userdb.user 
		limit 3;	

	create  table  t4 
		select username,uid,homedir,password from userdb.user 
		limit 6;

	select  * from t3;
	select  * from t4;

	select  *  from  t3 left join t4 on t3.uid = t4.uid;
	select  *  from  t3 right join t4 on t3.uid = t4.uid;

	 		
二、mysql管理工具
	2.1 访问数据库服务器的方式有那些？
	    1 命令连接
	    2 安装软件，访问软件，连接数据库服务器
		软件会提供图形界面（开发的图形  或 web页面）

        2.2 在数据库服务器上，部署phpMyAdmin 图形软件
		]# yum  -y  install httpd  php  php-mysql
		]# systemctl  start httpd
		
		]# tar -zxvf phpMyAdmin-2.11.11-all-languages.tar.gz

	]# mv phpMyAdmin-2.11.11-all-languages  /var/www/html/phpmyadmin
	]# ]# chown -R apache:apache  /var/www/html/phpmyadmin/
	]# cd /var/www/html/phpmyadmin/
		]# cp  config.sample.inc.php config.inc.php
		]# vim config.inc.php
 		  17 $cfg['blowfish_secret'] = 'plj123';
		  31 $cfg['Servers'][$i]['host'] = 'localhost';
		:wq
	打开真机的浏览器访问	
        http://192.168.4.55/phpmyadmin
		用户名 root
		密码   密码

	软件使用 练习 10分钟到 15：55

	休息到 16：10 

三、用户授权与权限撤销
	3.0 恢复数据库管理员root用户本机登陆密码
	    ]# systemctl  stop mysqld
	    ]# vim /etc/my.cnf
		[mysqld]
		skip-grant-tables
		#validate_password_policy=0
		#validate_password_length=6 
		:wq
	    ]# systemctl  start mysqld 
	    ]# mysql
		mysql> update mysql.user 
			  set authentication_string=password("123qqq...A")
                          where host="localhost" and  user="root";
		mysql> flush privileges;
		mysql> exit

	    ]# vim /etc/my.cnf
                 [mysqld]
		 #skip-grant-tables
		 validate_password_policy=0
		 validate_password_length=6
		:wq
		]# systemctl  restart mysqld
		]# mysql -uroot -p123qqq...A
		   mysql> show  databases;

	    修改数据库管理员root用户本机登陆密码
	    ]# mysqladmin  -hlocalhost -uroot -p  password "新密码"
            Enter password: 输入当前密码

	    ]# mysql  -uroot  -p新密码
	       mysql>

	3.1 用户授权 : 在数据库服务器上 添加连接用户及设置访问权限
	3.2 默认那个用户有授权 权限 : 数据库管理员root用户本机登陆 
            			      才有授权权限
		
	3.3 授权记录在那里 ： 授权库 mysql 
				user   已有的用户及访问权限
				db     记录已有的用户对数据库的访问权限
				tables_priv  记录已有的用户对表的访问权限
				columns_priv  记录已有的用户对字段的访问权限
	3.4 授权命令的用法
		mysql> grant 权限列表 on  数据库名 to  用户名@"客户端地址"
		       identified by "密码" [ with grant option ];
  
	3.5 例子
	    mysql> grant  all  on  *.*  to  mydba@"%" 
		   identified by "123456" with grant option;	


	    mysql> grant select on userdb.user to plj@"localhost" 
                   identified by "123456";

	3.6 相关命令？
	     select user();
	     show grants;
             select user,host from mysql.user;
	     show  grants  for 用户名@"客户端地址";
	     set  password= password(“新密码”);
	     set password for  用户名@'客户端地址'=passowrd(“新密码”);


	3.7 撤销用户权限
	mysql> revoke  权限列表 on 数据库名 from  用户名@"客户端地址";
	
	mysql> revoke GRANT OPTION  on  *.* from mydba@"%";

	mysql> revoke delete,insert on  *.* from mydba@"%";

	mysql> revoke all on  *.* from mydba@"%";	

	mysql> show grants for  mydba@"%";

	3.8 删除授权用户
	    mysql> drop user  用户名@"客户端地址";

	    mysql> select user,host from  mysql.user where user="mydba";	    
	    mysql> drop user   mydba@"%";

+++++++++++DBA1_DAY05  数据备份与数据恢复++++++++++++++++++++++++++++++
   相关概念：
	1 数据备份方式： 
			物理备份 直接拷贝库或表对应系统文件 
			逻辑备份 使用备份命令或软件对数据做备份，生成对应的备份文件

	2 数据备份策略：
			完全备份： 备份所有数据 （ 1张表  、1个库 、1台数据库服务器）

			备份新产生的数据	   
			差异备份： 备份完全备份后，所有新产生的数据.
			增量备份 : 备份上次备份后，所有新产生的数据.

      3 数据物理备份 和 数据物理恢复
        50 : 数据物理备份 
		]# mkdir  /mybak
   		]# cp -r /var/lib/mysql  /mybak/mysql.bak
   		]# ls /mybak
   		]# tar -zcvf /mybak/mysql.tar.gz  /var/lib/mysql/* 
   		]# ls /mybak/
   		]# scp -r /mybak/mysql.bak  root@192.168.4.55:/root/
	
	55 : 数据物理恢复
		]# systemctl status mysqld
  		]# systemctl stop mysqld
  		]# rm -rf /var/lib/mysql/*
		]# ls /var/lib/mysql
		]# ls /root/mysql.bak/
		]# cp -r  /root/mysql.bak/*  /var/lib/mysql/
		]# chown  -R mysql:mysql /var/lib/mysql
		]# systemctl  start mysqld
		]# mysql -uroot  -p密码

	物理备份的优点与缺点？
			 
一、mysqldump
	1.1 数据完全备份
		1.1.1 备份命令用法
		      ]# mysqldump  --help
		      ]# man        mysqldump
		      ]# mysqldump   -uroot    -p 密码    库名  >  路径/xxx.sql

		
		1.1.2 数据完全恢复命令用法
		      ]# mysql -uroot  -p密码 [库名]  <  路径/xxx.sql
		      
		1.1.3 例子
		      50 备份数据
		      ]# mysqldump -uroot -p123qqq...A  -A  > /mybak/mysql-all.sql

		    ]# mysqldump -uroot -p123qqq...A  userdb user  > /mybak/userdb_user.sql
		      ]# mysqldump -uroot -p123qqq...A  db4  > /mybak/db4.sql

	              ]# mysqldump -uroot -p123qqq...A  -B db4 userdb  > /mybak/twodb.sql	
		      ]# ls  /mybak/*.sql

		      ]# scp  /mybak/userdb_user.sql   root@192.168.4.52:/root/
		      ]# scp  /mybak/db4.sql  root@192.168.4.52:/root/

		      ]# scp  /mybak/twodb.sql   root@192.168.4.51:/root/
		      52 数据恢复 
		      ]# mysql  -uroot  -p123qqq...A  
		         mysql> create database  userdb;
		         mysql> create database  db4;
		         mysql> exit
		      ]# mysql  -uroot  -p123qqq...A  userdb  < /root/userdb_user.sql
		      ]# mysql  -uroot  -p123qqq...A  db4  < /root/db4.sql
		      ]# mysql  -uroot  -p123qqq...A
			 mysql> select  * from userdb.user;
			 mysql> use db4;
			 mysql> show tables;

		      51 数据恢复
			 ]# mysql  -uroot  -p123qqq...A  < /root/twodb.sql
			 ]# mysql  -uroot  -p123qqq...A
			    mysql> show  databases;
             使用mysqldump 做数据完全备份与恢复的优点与缺点？
		 

二、实时增量备份/恢复-----使用mysql服务自带的binlog日志文件实现的
	2.1 mysql服务binlog日志的管理
		2.1.1 binlog日志介绍?
			
		2.1.2 启用binlog日志
			]# vim /etc/my.cnf
			 [mysqld]
			 server_id=50
			 log-bin
			:wq
			]#  systemctl  restart mysqld
			]#  cd /var/lib/mysql/
			]#  ls  *-bin*
                    		mysql50-bin.000001  mysql50-bin.index
				      日志文件         索引文件

		2.1.3 自定义binlog日志 存储目录和日志文件名
			]# vim /etc/my.cnf
				[mysqld]
				server_id=50
				log-bin=/logdir/plj
				:wq
			]# mkdir /logdir
			]# chown mysql  /logdir
			]# ls -l /logdir/
			]# ls -ld /logdir/
			]# systemctl  restart  mysqld
			]# ls -l /logdir/plj*
			   plj.000001    plj.index		

		2.1.4 管理binlog日志文件
			1 手动创建新的日志文件
				]# systemctl  restart mysqld
				]# mysqldump  -uroot  -p123qqq...A  --flush-logs db5 > /mybak/db5.sql
				]# mysql  -uroot  -p123qqq...A  -e "flush logs"				
				mysql> flush logs;

			2 删除已有的日志文件
				mysql> show master status; 显示正在使用日志文件信息
				mysql> purge  master  logs  to "plj.000005";
				mysql> reset master;
				
		2.1.5 查看日志文件内容
			2.1.5.1 查看日志文件内容命令
				]# mysqlbinlog  [选项]  binlog日志文件名
				]# mysqlbinlog  /logdir/plj.000001

				常用选项
				--start-datetime="yyyy-mm-dd hh:mm:ss"
				--stop-datetime="yyyy-mm-dd hh:mm:ss"
				--start-position=数字
				--stop-position=数字
	休息到 15：15

			2.1.5.2 日志记录sql命令格式
 			查看
				mysql> show variables like "binlog_format";
					+---------------+-------+
					| Variable_name | Value |
					+---------------+-------+
					| binlog_format | ROW   |
					+---------------+-------+
			修改
				]# vim /etc/my.cnf
					[mysqld]
						server_id=50
						log-bin=/logdir/plj
						binlog_format="mixed"
				:wq
				]# systemctl  restart  mysqld

  				]# mysql  -uroot  -p123qqq...A
				mysql> show variables like "binlog_format";
				mysql> reset  master;
				mysql> show  master status;
				mysql> show  databases;
				mysql> create  database bbsdb;
			mysql> create table  bbsdb.user(name char(10),password char(6));
			mysql> desc bbsdb.user;
			mysql> select  * from bbsdb.user;
			mysql> insert into  bbsdb.user values("bob","abc123");
			mysql> insert into  bbsdb.user values("tom","123123");
			mysql> insert into  bbsdb.user values("jim","654321");

			]# mysqlbinlog  /logdir/plj.000001 | grep -i create
			]# mysqlbinlog  /logdir/plj.000001 | grep -i select
			]# mysqlbinlog  /logdir/plj.000001 | grep -i desc
			]# mysqlbinlog  /logdir/plj.000001 | grep -i insert
	
			2.1.5.3 日志记录sql命令方式
					时间点：记录命令执行的时间
					偏移量：记录命令的长度


	2.2 使用binlog日志恢复数据
		  2.2.1 命令用法
			]# mysqlbinlog [选项] 日志文件 | mysql -uroot -p密码

		  2.2.1 例子
			50 ：
			    ]# scp  plj.000001  root@192.168.4.52:/root/

			52:
			    ]# mysqlbinlog  /root/plj.000001   | mysql -uroot -p123qqq...A
			    ]# mysql -uroot -p123qqq...A
			    mysql> show databases;
			    mysql> select  * from bbsdb.user;

			50: 读日志指定范围的sql命令， 恢复数据
			  
			mysql> insert into  bbsdb.user values("tom","123123");
			mysql> insert into  bbsdb.user values("jim","654321");
			mysql> select  * from bbsdb.user;
			mysql> delete from bbsdb.user where name in ("jack","alice");
			mysql> select  * from bbsdb.user;

			]# mysqlbinlog  --start-position=1517 --stop-position=1955 \
                               /root/plj.000001 | mysql  -uroot  -p123qqq...A

			mysql> select  * from bbsdb.user; 
			
			休息15分钟 练习 15分钟 到  16：40 讲新课

三、innobackupex
	3.1 软件介绍 ？ 

	3.2 安装软件
		]# yum  -y  install libev-4.15-1.el6.rf.x86_64.rpm
		]# yum  -y  install percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm
   		]# innobackupex --help
   		]# man innobackupex

	3.3 命令用法 
		]# innobackupex  <选项>
		选项说明？		
		--user   --password  --no-timestamp 

	3.4 数据备份与恢复
		3.4.1 数据完全备份与恢复
			1 备份数据
				]# innobackupex  --user root  --password 123qqq...A  \
			   	   /allbak  --no-timestamp

				]# ls  /allbak

			2 恢复恢复			
				2.1 准备恢复数据
				2.2 把备份文件拷贝到数据库目录下
				2.3 修改目录的所有者和组为mysql用户
				2.4 启动服务
				2.5 管理员登陆查看数据
				]# systemctl  stop  mysqld
				]# rm  -rf /var/lib/mysql/*
   				]# innobackupex  --apply-log  /allbak
   				]# innobackupex  --copy-back /allbak
				]# chown  -R mysql:mysql /var/lib/mysql
				]# systemctl  start  mysqld
				]# mysql -uroot -p123qqq...A
				   mysql> show database;
				   mysql> select  * from  db5.a;

		3.4.2 数据增量备份与恢复
1 增量备份
		]# rm -rf  /fullbak/  ;  rm  -rf  /new1dir/ ; rm -rf  /new2dir/

		第1次备份所有的数据 （完全备份）
		]# innobackupex --user root --password 123qqq...A  /fullbak --no-timestamp
		]# ls /fullbak/
		mysql> insert into  db5.a values(666); 写10条				
		
		第2次备份新产生的数据 （增量备份）
		]# innobackupex --user root --password 123qqq...A  --incremental /new1dir \
		   --incremental-basedir=/fullbak  --no-timestamp
		]# ls /new1dir/

		mysql> insert into  db5.a values(555); 写10条
		
		第3次备份新产生的数据 （增量备份）
		]# innobackupex --user root --password 123qqq...A  --incremental /new2dir \                   --incremental-basedir=/new1dir  --no-timestamp		
	
		]# ls /new2dir		

		练习到 14：23
		innobackupex命令执行增量备份时，
                是如何知道 在备份的所有数据里，那些数据是新产生的 ？ 
		innobackupex命令的工作过程：

					2 增量恢复   练习 到 15：30 
		1 准备恢复数据
		2 合并日志
		3 把备份文件拷贝到数据库目录下
		4 修改数据库目录所有者和组用户为mysql
		5 启动服务
		6 管理员登陆查看数据

		]# systemctl  stop mysqld
  		]# rm -rf /var/lib/mysql/*
  		]# ls /var/lib/mysql/
			
	]# innobackupex  --apply-log --redo-only /fullbak
	]# innobackupex  --apply-log --redo-only  --incremental-dir=/new1dir /fullbak  
	]# innobackupex  --apply-log --redo-only  --incremental-dir=/new2dir   /fullbak  
	]# innobackupex  --copy-back /fullbak
		
		]#rm -rf /new1dir/
		]#rm -rf /new2dir/

		]# ls /var/lib/mysql/ -l
		]# chown -R mysql:mysql /var/lib/mysql
		]# systemctl  start mysqld
		]# mysql -uroot -p123qqq...A
		mysql> select  * from  db5.a;

		3.4.3 从完全备份数据里恢复单张表
			mysql> create table db5.b(name char(10));
			mysql> insert into  db5.b 
				values("bob"),("bob"),("bob"),("bob"),("bob"),("bob");
	
			mysql> insert into  db5.b 
				values("bob"),("bob"),("bob"),("bob"),("bob"),("bob");

			mysql> show tables;

			备份db5库
			]# innobackupex  --user root  --password 123qqq...A \
			    --databases="db5"   /db5bak  --no-timestamp

			]# ls  /db5bak

			mysql>  drop table db5.b;

			恢复b表
			      步骤如下：
					1  创建表b
					2  删除b表 表空间文件
					3  在备份数据里导出表信息
					4  把导出的表信息文件拷贝到数据库目录下
					5  修改表信息文件的所有者和组用户为mysql
					6  导入表信息
					7  查看表记录

				mysql> create table db5.b(name char(10));
				mysql> alter  table db5.b  discard  tablespace;  
				]# innobackupex  --apply-log --export /db5bak/
mysql> system  cp  /db5bak/db5/b.{cfg,exp,ibd} /var/lib/mysql/db5/
mysql> system chown  mysql:mysql /var/lib/mysql/db5/b.*
mysql> alter  table  gamedb.a  import  tablespace; 
mysql>  select  * from  db5.b;
mysql>  select  * from db5.a;
mysql> system rm -rf  /var/lib/mysql/db5/b.cfg
mysql> system rm -rf  /var/lib/mysql/db5/b.exp
mysql> insert into db5.b values("tom");

+++++++++++DBA2_Day01++++++++++++++++
一 mysql主从同步
	1.1 mysql主从同步 工作原理
	1.2 部署mysql主从同步
		1.2.1 准备工作： 确保数据相同 从库必须要有主库上的数据。 
		1.2.1 配置mysql主从同步
			1.2.1.1 配置主库 192.168.4.51
				
				]# vim /etc/my.cnf
				[mysqld]
					server_id=51
					log-bin=master51
				:wq
				
				]# systemctl restart mysqld
				
				]# mysql -uroot  -p密码
				   mysql> grant  replication slave on  *.*  to  repluser@"%" identified by "123qqq...A";

				mysql> show master status;

			1.2.1.2 配置从库 192.168.4.52
				]# vim /etc/my.cnf
				   [mysqld]
					server_id=52
				:wq
			
				]# systemctl restart mysqld

				]# mysql -uroot  -p密码

				mysql> change  master to master_host="192.168.4.51",master_user="repluser",master_password="123qqq...AA",master_log_file="master51.000001",master_log_pos=441;

				mysql> start slave;
				mysql> show slave status\G;
					Master_Host: 192.168.4.51
					Slave_IO_Running: Yes
            				Slave_SQL_Running: Yes

				mysql> system cat /var/lib/mysql/master.info

			1.2.1.3 测试主从同步配置
				1  在主库51上添加访问数据的连接用户
				     ]# mysql  -uroot  -p密码
				     mysql> create database db6;
				     mysql> grant all on db6.*  to  yaya@"%" identified by "123qqq...A";

				2 客户端50 连接主库51 存储数据
				    ]# mysql  -h192.168.4.51 -uyaya  -p123qqq...A
				        mysql> use db6;
					mysql> create table  t1(id int);
					mysql> insert into  t1 values(11)，（99），（88）；
					
				3 从库52管理员本机登陆查看 ， 有主库的数据
				]# mysql  -uroot  -p密码
				mysql> select  * from db6.a;

		1.3 主从同步排错
 mysql> show  slave status\G;

 Last_IO_Error: error connecting to master 'repluser@192.168.4.51:3306' - retry-time: 60  retries: 14

 Last_IO_Error: error connecting to master 'repluser@192.168.4.51:3306' - retry-time: 60  retries: 9

Last_IO_Error: Got fatal error 1236 from master when reading data from binary log: 'Client requested master to start replication from position > file size'


 Last_SQL_Error:
			stop slave;
			start slave;

Last_IO_Error: Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work.

]# vim /var/lib/mysql/auto.cnf
]# systemctl restart mysqld



mysql> stop slave;

mysql> change master to  master_password="123qqq...A";

mysql> start slave;

	1.4 把从库还原 为独立的数据库服务器。
		[root@mysql52 mysql]# cd /var/lib/mysql
		[root@mysql52 mysql]# rm  -rf master.info 
		[root@mysql52 mysql]# rm  -rf relay-log.info 
		[root@mysql52 mysql]# rm  -rf mysql52-relay-bin.00000*
		[root@mysql52 mysql]# rm  -rf mysql52-relay-bin.index 
		[root@mysql52 mysql]# systemctl  restart mysqld
		[root@mysql52 mysql]# mysql -uroot -p密码
		mysql> show slave status\G;
	
	1.5 mysql主从同步常用配置项
		1.5.1  写在主库/etc/my.cnf文件里的常用配置（对所有的从库有效）
			]# vim /etc/my.cnf
			[mysqld]
			#binlog_do_db=gamedb  仅允许从库同步的库
			binlog_ignore_db=bbsdb 不允许从库同步的库
			：wq
			]# systemctl restart mysqld

		1.5.2  写在从库/etc/my.cnf文件里的常用配置（只对从库本机有效）

			]# vim /etc/my.cnf
		       		log_slave_updates
				relay_log=中继日志文件名
				#replicate_do_db=库名    //仅同步的库
				replicate_ignore_db=库名 //只不同步的库
			:wq

			]# systemctl restart mysqld
	

	1.6 主从同步结构
		1.6.1 主从同步结构分类：
			一主一从
			一主多从
			主从从
			主主结构（互为主从）

		1.6.2 配置mysql主从同步 一主多从 
			给主机53配置2个从数据库服务器 分别是54和55
			配置主库53
				1 启用binlog日志
				        ]# vim /etc/my.cnf
					   [mysqld]
						server_id=53
						log-bin=master53
				         :wq
				        ]# systemctl restart mysqld

				2 用户授权	
				        mysql> grant  replication slave on  *.* to
					  repluser@"%" identified by "123qqq...A";
			
				3 查看binlog日志信息
				        mysql> show master status;
			配置从库54
				1 指定server_id
				     ]# vim /etc/my.cnf
                                        [mysqld]
                                                server_id=54
                                :wq
                                ]# systemctl restart mysqld

				2 指定主库信息
				mysql> change master to 
					master_host=‘192.168.4.53”,master_user="repluser",
					master_password="123qqq...A",
					master_log_file="master53.000001",
					master_log_pos=数字;
				3 启动slave     
					mysql> start slave;
				4 查看状态信息  
					mysql> show slave status\G;
			休息到 17：40 
			配置从库55
                                1 指定server_id
					 ]# vim /etc/my.cnf
                                        	[mysqld]
                                                server_id=55
                                	:wq
                                	 ]# systemctl restart mysqld
                                2 指定主库信息
					mysql> change master to
                                        master_host=‘192.168.4.53”,master_user="repluser",
                                        master_password="123qqq...A",
                                        master_log_file="master53.000001",
                                        master_log_pos=数字;
                                3 启动slave     
					mysql> start slave;
                                4 查看状态信息  
					mysql> show slave status\G;
			客户端50测试配置：
				 1  在主库53上添加访问数据的连接用户
                                     ]# mysql  -uroot  -p密码
                                     mysql> create database db6;
                        mysql> grant all on db6.*  to  yaya@"%" identified by "123qqq...A";
                                2 客户端50 连接主库53 存储数据
                                    ]# mysql  -h192.168.4.53 -uyaya  -p123qqq...A
                                       mysql> use db6;
                                        mysql> create table  t1(id int);
                                        mysql> insert into  t1 values(11)，（99），（88）；

                                3 从库54和55 管理员本机登陆查看 ， 有主库53的数据
                                ]# mysql  -uroot  -p密码
                                   mysql> select  * from db6.a;

		1.6.3 配置mysql主从同步 主从从
		       51   52   53
		       主   从	 从
		       配置从库53 仅同步主库 52 teadb 库数据
			   53 ：
			   ]# vim  /etc/my.cnf
				[mysqld]
				replicate_do_db=teadb
      			   :wq
			   ]# systemctl restart  mysqld
			   ]# mysql -uroot -p密码
			   mysql> show slave status\G;
				  Replicate_Do_DB: teadb

		       配置主库51 只不允许 从库52 同步本机的 gamedb 库数据
		           51:
			   ]# vim  /etc/my.cnf
                                [mysqld]
                                binlog_ignore_db=gamedb
                           :wq
                           ]# systemctl restart  mysqld
                           ]# mysql -uroot -p密码
			   mysql> show master status\G
				  Binlog_Ignore_DB：gamedb

		1.6.4 配置mysql主从同步 主主结构
		
		休息到 10：15

二 mysql主从同步复制模式
		1 异步复制模式
		2 全同步复制模式
		3 半同步复制模式
		4 配置mysql主从同步 半同步复制模式
			4.1 主库 启用半同步复制模式 192.168.4.51
			     1 查看当前的数据库服务器是否允许动态加载模块
		                mysql>show  variables  like  "have_dynamic_loading";
			        have_dynamic_loading   YES
			     2 加载模块并查看
		mysql> INSTALL PLUGIN rpl_semi_sync_master SONAME   "semisync_master.so";
		mysql> SELECT  PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS                         WHERE PLUGIN_NAME LIKE "%semi%";  

		       rpl_semi_sync_master  ACTIVE
			    3 启用半同步复制模式 并查看
		mysql> SET GLOBAL rpl_semi_sync_master_enabled = 1; //启用
		mysql> show  variables  like  "rpl_semi_sync_%_enabled"; //查看
		       rpl_semi_sync_master_enabled  ON
			    4 修改主配置使设置永久生效
				vim /etc/my.cnf
				[mysqld]
				plugin-load=rpl_semi_sync_master=semisync_master.so
				rpl_semi_sync_master_enabled=1
				:wq

		4.2 从库 启用半同步复制模式 192.168.4.53
				1 查看当前的数据库服务器是否允许动态加载模块
				    mysql>show  variables  like  "have_dynamic_loading";
                                2 加载模块
mysql> INSTALL PLUGIN rpl_semi_sync_slave SONAME  "semisync_slave.so";
mysql> SELECT  PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS  WHERE PLUGIN_NAME LIKE "%semi%"; 
                                
                                3 启用半同步复制模式
mysql> SET GLOBAL rpl_semi_sync_slave_enabled = 1;
mysql>  show  variables  like  'rpl_semi_sync_%_enabled';

				4 修改主配置使设置永久生效
				]# vim /etc/my.cnf
                                   [mysqld]
                                   plugin-load=rpl_semi_sync_slave=semisync_slave.so
                                   rpl_semi_sync_slave_enabled=1
                                 :wq

		如果一台数据库服务器即做主库又做从库 2种都要启用。
		mysql> INSTALL PLUGIN rpl_semi_sync_master SONAME   "semisync_master.so";
		mysql> INSTALL PLUGIN rpl_semi_sync_slave SONAME  "semisync_slave.so";
		mysql> SET GLOBAL rpl_semi_sync_slave_enabled = 1;
		mysql> SET GLOBAL rpl_semi_sync_master_enabled = 1;
		mysql> show  variables  like  'rpl_semi_sync_%_enabled';

		]# vim /etc/my.cnf
		   [mysqld]
		   plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
		  rpl-semi-sync-master-enabled = 1
		  rpl-semi-sync-slave-enabled = 1
		:wq
 休息到11：10  练习 15分钟 到 11：25
		    
++++++++++++++++DBA1_day02++++++++++++++
一、MySQL数据读写分离
    数据读写分离:把客户端的访问数据的查询请求和写数据的请求分别给不同的数据库服务器处理。
    数据读写分离实现方式：
		1 通过程序实现： 明确告诉程序员查询操作和写数据的操作必须连接固定的数据库服务器
		2 架设服务结构实现： 使用数据读写分离服务的软件（mysql中间件）
				      maxscale  mysql-proxy  mycat

	1.1 部署mysql 一主一从 主从同步结构
		1.1.1 配置主库192.168.4.51

		1.1.2 配置从库192.168.4.52

	1.2 配置MySQL代理服务器 192.168.4.57
			]# systemctl  stop  mysqld
			]# systemctl  disable  mysqld
		装包
			]# rpm  -ivh  maxscale-2.1.2-1.rhel.7.x86_64.rpm			
		修改配置文件
			]# cp /etc/maxscale.cnf /etc/maxscale.cnf.bak
 ]# vim  /etc/maxscale.cnf
 9 [maxscale]    定义服务启动后 线程的数量
 10 threads=auto

 18 [server1]    定义主库服务器ip地址及端口号
 19 type=server
 20 address=192.168.4.51
 21 port=3306
 22 protocol=MySQLBackend
 
 24 [server2]  定义从库服务器ip地址及端口号
 25 type=server
 26 address=192.168.4.52
 27 port=3306
 28 protocol=MySQLBackend

 35 [MySQL Monitor]   定义maxscale服务监视的数据库服务器
 36 type=monitor
 37 module=mysqlmon
 38 servers=server1, server2  监视的数据库服务器
 39 user=monitoruser   监控用户名
 40 passwd=123qqq...A  密码
 41 monitor_interval=10000

 52 #[Read-Only Service] 不定义只读服务
 53 #type=service
 54 #router=readconnroute
 55 #servers=server1
 56 #user=myuser
 57 #passwd=mypwd
 58 #router_options=slave

 63 [Read-Write Service]  定义读写分离服务
 64 type=service
 65 router=readwritesplit
 66 servers=server1, server2
 67 user=scaluser        路由用户名
 68 passwd=123qqq...A    密码
 69 max_slave_connections=100%

 75 [MaxAdmin Service] 定义管理服务
 76 type=service
 77 router=cli
		
 85 #[Read-Only Listener]  不定义读服务使用的端口
 86 #type=listener
 87 #service=Read-Only Service
 88 #protocol=MySQLClient
 89 #port=4008

 91 [Read-Write Listener]  定义读写分离服务使用的端口
 92 type=listener
 93 service=Read-Write Service
 94 protocol=MySQLClient
 95 port=4006
 96 
 97 [MaxAdmin Listener]   定义管理服务使用的端口
 98 type=listener
 99 service=MaxAdmin Service
100 protocol=maxscaled
101 socket=default
102 port=4016

		根据配置文件做相应的配置
			1 在2台数据库服务器上创建监控用户monitoruser 和 路由用户scaluers
			   在主库51上添加用户
				mysql> grant replication slave, replication client on *.* to monitoruser@"%"
    -> identified by "123qqq...A";

mysql> grant select on mysql.* to scaluser@"%"
    ->  identified by "123qqq...A";

mysql> select host,user from mysql.user where user in ("monitoruser","scaluser");

			   在从库52上查看

mysql> select host,user from mysql.user where user in ("monitoruser","scaluser");
+------+-------------+
| host | user        |
+------+-------------+
| %    | monitoruser |
| %    | scaluser    |
+------+-------------+
			   在57主机测试数据库的授权用户
				15  mysql -h192.168.4.51 -umonitoruser -p123qqq...A
   				16  mysql -h192.168.4.52 -umonitoruser -p123qqq...A
   				17  mysql -h192.168.4.51 -uscaluser -p123qqq...A
   				18  mysql -h192.168.4.52 -uscaluser -p123qqq...A

		启动服务
			[root@host57 ~]# netstat -utnlp | grep :4006
			[root@host57 ~]# netstat -utnlp | grep :4016

			[root@host57 ~]# maxscale  -f /etc/maxscale.cnf 启动服务				
			[root@host57 ~]# killall  -9 maxscale 停止服务
		查看服务信息
			[root@host57 ~]# ps -C maxscale
  			PID TTY          TIME CMD
 			4863 ?        00:00:00 maxscale
			
[root@host57 ~]# netstat -utnlp | grep maxscale
tcp6       0      0 :::4016                 :::*                    LISTEN      4863/maxscale       
tcp6       0      0 :::4006                 :::*                    LISTEN      4863/maxscale       
		在maxscale本机连接管理端口查看监控状态
			[root@host57 ~]# maxadmin -uadmin  -pmariadb -P4016
			MaxScale> help
			MaxScale> 
			Servers.
-------------------+-----------------+-------+-------------+--------------------
Server             | Address         | Port  | Connections | Status              
-------------------+-----------------+-------+-------------+--------------------
server1            | 192.168.4.51    |  3306 |           0 | Master, Running
server2            | 192.168.4.52    |  3306 |           0 | Slave, Running
-------------------+-----------------+-------+-------------+--------------------

			MaxScale> exit

		
      1.3 客户端测试
		1.3.1 在2台数据库服务器上添加客户端访问数据的连接用户
			在主库授权访问数据的连接用户jim  密码123qqq...A
			mysql> create database db7;
			mysql> create table db7.t1(name char(10));
	mysql> grant select ,insert on  db7.*  to jim@"%" identified by "123qqq...A";
mysql> select host,user from mysql.user where user="jim";
+------+------+
| host | user |
+------+------+
| %    | jim  |
+------+------+
		1.3.2 客户端50 连接代理服务器192.168.4.57 查询数据或存储数据
			[root@mysql50 ~]# mysql -h192.168.4.57 -P4006  -ujim  -p123qqq...A
			mysql> select  * from db7.t1;
			mysql> insert into  db7.t1 values("tom");
			mysql> select  * from db7.t1;
			mysql> exit
 	          52]# mysql  -uroot -p密码 （52本机向表里插入记录B）
	               mysql> insert into  db7.t1 values（“BBBBBB”); 

                  50]# mysql -h192.168.4.57 -P4006  -ujim  -p123qqq...A
	               mysql> select  * from db7.t1; 显示的B记录说明是在从库查询的记录  
  练习到 16：38 休息到 16：50  
二、MySQL多实例
	MySQL多实例介绍：

	]# tar mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz 
	]# mv  mysql-5.7.20-linux-glibc2.12-x86_64 /usr/local/mysql
	]# mv /etc/my.cnf /root/

]# vim /etc/my.cnf
[mysqld_multi]
mysqld = /usr/local/mysql/bin/mysqld_safe 
mysqladmin = /usr/local/mysql/bin/mysqladmin
user = root

[mysqld1]
datadir=/dir1
log-error=/dir1/mysqld1.log
socket=/dir1/mysqld1.sock
pid-file=/dir1/mysqld1.pid
port=3307

[mysqld2]
datadir=/dir2
log-error=/dir2/mysqld2.log
socket=/dir2/mysqld2.sock
pid-file=/dir2/mysqld2.pid
port=3308
:wq

  ]# mkdir /dir1
  ]# mkdir /dir2

]# /usr/local/mysql/bin/mysqld_multi start 1
]# /usr/local/mysql/bin/mysql  -uroot -p'rgr-HTf2L6lr' -S /dir1/mysqld1.sock
     mysql> alter user  root@"localhost" identified by "123456";
     mysql> show databses;
     mysql> exit
]# /usr/local/mysql/bin/mysql  -uroot -p123456  -S /dir1/mysqld1.sock
   mysql> show databses;

]# /usr/local/mysql/bin/mysqld_multi  --user=root --password=123456 stop 1
]# netstat  -utnlp  | grep  :3307


]# /usr/local/mysql/bin/mysqld_multi start 2
]# /usr/local/mysql/bin/mysql -uroot -p'(zyc%o7w!=2Z' -S /dir2/mysqld2.sock
mysql> alter user  root@"localhost" identified by "123456";
     mysql> show databses;
     mysql> exit

]# /usr/local/mysql/bin/mysql  -uroot -p123456  -S /dir2/mysqld2.sock
     mysql> show databses;

]# /usr/local/mysql/bin/mysqld_multi  --user=root --password=123456 stop 2



三、MySQL性能调优 (放到 DBA2_day05 的 讲 )
++++++++++++++DBA2_Day03+++++++++++++++++++++++++++++++++++++
一 、MHA集群概述
	1.1  集群的定义： 多台服务器一起提供相同的服务
			  LB  多台一起提供服务  LVS  Haproxy  Nginx
			  HA  主备方式提供服务  keepalived

 	1.2  MHA软件介绍：		
			Master High Availability
			perl 语言开发的软件 

	1.3 MHA组成：


        1.4 MHA工作过程：


二、部署MHA集群
	2.1 集群环境准备
		]# yum  -y  install perl-*  ( 51  ～  56 )

		所有数据库服务器之间可以ssh无密码登陆  51~55

		配置主机56 可以无密码ssh 所有 数据库服务器 51  ～ 55

		配置一主多从 （ 52 ～ 55 都做 51 的从 数据库 服务器）

		把 目录 mha-soft-student 拷贝给 51  ～  56

	 根据角色规划 服务器 51 52  53 做如下配置   11:30 讲新课
	 ]# vim /etc/my.cnf
		[mysqld]
		server_id=数字
		log-bin=日志名
		：wq
	 ]# systemctl  restart  mysqld

	 ]# mysql  -uroot  -p密码
		mysql>  set  global  relay_log_purge=off;
		mysql> INSTALL PLUGIN rpl_semi_sync_master SONAME   "semisync_master.so";
                mysql> INSTALL PLUGIN rpl_semi_sync_slave SONAME  "semisync_slave.so";
                mysql> SET GLOBAL rpl_semi_sync_slave_enabled = 1;
                mysql> SET GLOBAL rpl_semi_sync_master_enabled = 1;
                mysql> show  variables  like  'rpl_semi_sync_%_enabled';
        ]# vim /etc/my.cnf
                   [mysqld]
plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
                  rpl-semi-sync-master-enabled = 1
                  rpl-semi-sync-slave-enabled = 1
		   relay_log_purge=off
		:wq
      根据角色规划 服务器 54 55 做如下配置
      ]# mysql  -uroot  -p密码
                mysql>  set  global  relay_log_purge=off;
		mysql> INSTALL PLUGIN rpl_semi_sync_slave SONAME  "semisync_slave.so";
		mysql> SET GLOBAL rpl_semi_sync_slave_enabled = 1;
		mysql> show  variables  like  'rpl_semi_sync_%_enabled';
     ]# vim /etc/my.cnf	
		[mysqld]
		plugin-load="rpl_semi_sync_slave=semisync_slave.so"
                rpl-semi-sync-slave-enabled = 1
                relay_log_purge=off
                :wq
	
   2.2 配置集群
	2.2.1 配置管理主机 192.168.4.56
		1 安装依赖包
			]# cd mha-soft-student/
   			]# yum -y  install  perl-*.rpm
		2 安装提供MHA程序的软件包
			]# yum -y  install  mha4mysql-node-0.56-0.el6.noarch.rpm
			]# tar -zxvf mha4mysql-manager-0.56.tar.gz 
    			]# cd mha4mysql-manager-0.56/
[root@mysql56 mha4mysql-manager-0.56]# perl Makefile.PL
*** Module::AutoInstall version 1.03
*** Checking for Perl dependencies...
[Core Features]
- DBI                   ...loaded. (1.627)
- DBD::mysql            ...loaded. (4.023)
- Time::HiRes           ...loaded. (1.9725)
- Config::Tiny          ...loaded. (2.14)
- Log::Dispatch         ...loaded. (2.41)
- Parallel::ForkManager ...loaded. (1.18)
- MHA::NodeConst        ...loaded. (0.56)
*** Module::AutoInstall configuration finished.
Checking if your kit is complete...
Looks good
Writing Makefile for mha4mysql::manager
Writing MYMETA.yml and MYMETA.json
[root@mysql56 mha4mysql-manager-0.56]# make  && make  install 
		3 创建管理服务的主配置文件
			]# mkdir /etc/mha_manager
			]# mha4mysql-manager-0.56	 
			]# cp samples/conf/app1.cnf /etc/mha_manager/
			
		4 编辑主配置文件 /etc/mha_manager/app1.cnf
			]# vim /etc/mha_manager/app1.cnf
			[server default] 管理服务默认配置
				manager_workdir=/etc/mha_manager
manager_log=/etc/mha_manager/manager.log
master_ip_failover_script=/etc/mha_manager/master_ip_failover
ssh_user=root
ssh_port=22

repl_user=repluser
repl_password=123qqq...AA

user=root
password=123qqq...A

[server1]
hostname=192.168.4.51
candidate_master=1
[server2]
hostname=192.168.4.52
candidate_master=1
[server3]
hostname=192.168.4.53
candidate_master=1
[server4]
hostname=192.168.4.54
no_master=1
[server5]
hostname=192.168.4.55
no_master=1
:wq
	
	2.2.2 配置数据库服务器主机 192.168.4.51～55  做如下配置
		]# cd mha-soft-student/
   		]# yum -y  install  mha4mysql-node-0.56-0.el6.noarch.rpm
					
	2.2.3 根据管理主机的app1.cnf的配置做相应的设置
		2.1 在数据库服务器51～55上添加监控用户root
		 51]# mysql -uroot -p123qqq...A
		 mysql> grant all  on *.* to   root@'%'  identified  by "123qqq...A";
		 mysql> exit;
		 ]# mysql -h192.168.4.52 -uroot -p123qqq...A
   		 ]# mysql -h192.168.4.53 -uroot -p123qqq...A
   		 ]# mysql -h192.168.4.54 -uroot -p123qqq...A
   		 ]# mysql -h192.168.4.55 -uroot -p123qqq...A

		2.2 在备用主库服务器52～53添加 添加同步数据用户repluser
		    mysql> grant  replication slave on  *.*  to repluser@"%"
			   identified by "123qqq...A";
		2.3 创建故障切换脚本 并定义vip地址
			]# cd mha-soft-student
			]# cp  master_ip_failover  /etc/mha_manager/
			]# vim  /etc/mha_manager/master_ip_failover	
		       		35 my $vip = '192.168.4.100/24';  # Virtual IP 
		   		:wq
			]# chmod +x /etc/mha_manager/master_ip_failover 

		2.4 把vip地址部署在当前主库192.168.4.51 上
			]# ifconfig  eth0:1  192.168.4.100

	2.2.4 在管理主机上检测配置
		2.2.4.1 检测ssh无密码连接
	[root@mysql56 ~]# masterha_check_ssh  --conf=/etc/mha_manager/app1.cnf			
	Wed Mar 20 15:30:49 2019 - [info] All SSH connection tests passed successfully.


		2.2.4.2 检测一主多从 主从同步
	]# masterha_check_repl   --conf=/etc/mha_manager/app1.cnf
	MySQL Replication Health is OK.

	2.2.5 启动管理主机上 管理服务，并查看状态
		1  启动服务
			]# masterha_manager  --conf=/etc/mha_manager/app1.cnf  \
			 --remove_dead_master_conf --ignore_last_failover

		2  查看状态
		        ]# masterha_check_status  --conf=/etc/mha_manager/app1.cnf
                        app1 (pid:9514) is running(0:PING_OK), master:192.168.4.51

三、测试集群
	3.1 在主库服务器51 添加访问数据的连接用户alice 
	    mysql> create database gamedb;
	    mysql> grant all on  gamedb.* to  alice@"%"  identified by "123qqq...A";

	3.2 客户端50 连接vip地址100 访问数据库服务
		]# mysql  -h192.168.4.100  -ualice  -p123qqq...A  gamedb
		   mysql> create table gamedb.t1(id int);
		   mysql> insert into gamedb.t1 values(9999);
		   mysql> select  * from gamedb.t1;
			+------+
			| id   |
			+------+
			| 9999 |
			+------+
			1 row in set (0.01 sec)

		mysql> 
	3.3 测试高可用集群
		3.3.1 停止当前主库 51 的数据库服务器
			 ]# systemctl  stop  mysqld
 
		3.3.2 客户端50 依然能连接vip地址100 访问数据库服务
		        ]# ping  -c 2  192.168.4.100
			]# mysql  -h192.168.4.100 -ualice  -p123qqq...A  gamedb
			mysql>
                3.3.3 从库 54 和 55 会连接新的主库同步数据
		]# mysql -uroot -p123456 -e "show slave status\G" | grep -i 'yes\|192'

                  Master_Host: 192.168.4.52  //新主库
                  Slave_IO_Running: Yes
                  Slave_SQL_Running: Yes

	       3.3.4  在新主库上查看vip地址
		[root@mysql52 ~]# ifconfig  eth0:1
		eth0:1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        	inet 192.168.4.100  netmask 255.255.255.0  broadcast 192.168.4.255
        	ether 52:54:00:03:09:73  txqueuelen 1000  (Ethernet)

++++++++++++++++++++DBA2_DAY04++++++++++++++++++++
一 MySQL视图
	2.1 视图介绍?
	2.2 视图优点?
	2.3 视图使用规则?
	2.4 视图的基本使用
		创建 create view 名  as  sql查询；

		查看 show  table  status  where  comment="view" \G;
 
		     show  create view 名;

		操作视图表里的记录  select  insert  update  delete
	
		删除 drop view 名;

	2.5 视图进阶
		2.5.1 设置字段别名 as
		        视图中的字段名不可以重复 所以要定义别名
			mysql> create  table  t1  
				select username,uid,gid from user limit 3;
			mysql> create  table  t2  
				select username,uid,password,shell from user 				     limit 5;
			mysql> select  * from  t1,t2 
				where t1.username = t2.username;
			mysql> create view v3 
				as 
				select  * from  t1,t2 
				where t1.username = t2.username; 报错
			ERROR 1060 (42S21): Duplicate column name 'username'
			方法1
			mysql>  create view v3 (a,b,c,d,e,f,g)
    				as
			select  * from t1,t2 where t1.username = t2.username;

			方法2
			mysql> create view v4  
				as 
				select  t1.username as a ,t1.uid as b ,
				t1.gid as c , t2.username as d , 
				t2.uid as e ,t2.password as f ,
				t2.shell as g  
				from  t1 ,t2 
				where t1.username = t2.username;

		2.5.3 视图算法 ALGORITHM
		     UNDEFINED，未定义
		     MERAGE，替换方式(默认)
		     TEMPTABLE，具体化方式

		    mysql> create ALGORITHM=TEMPTABLE view  v7  
			   as 
			   select username,uid from user;

select  insert update delete  ----> V7 select username,uid from user(内存里)


              2.5.4 with  check  option 限制对视图表的操作
		local 仅检查当前视图的限制 (必须要满足本身的限制)
		CASCADED  必须要满足本身的限制同时要满足基表的限制（默认值） 


		mysql>create view  v10 
		      as  
		      select  * from user where uid >= 100 and uid<=1000 
		      with local check  option;

		mysql> update v10 set uid=1001 where username="abrt";
		mysql> update v10 set uid=99 where username="abrt";
		mysql> update v10 set uid=666 where username="abrt";

		mysql> create view v11  
			as  
			select  * from v10 where uid >=300 with check option;

		mysql> show create view v11\G;
		mysql> update  v11 set uid=199 where username="chrony";
			ERROR 1369 (HY000): CHECK OPTION failed 'db9.v11'

		mysql> update  v11 set uid=1001 where username="chrony";
			ERROR 1369 (HY000): CHECK OPTION failed 'db9.v11'

		mysql> update  v11 set uid=889 where username="chrony";		
二 MySQL存储过程
	2.1 存储过程介绍？ mysql服务的脚本
	2.2 存储过程优点?
	2.3 基本使用:
		2.3.1 创建存储过程
			delimiter  //
			create procedure 库名.存储过程名()
			begin
				代码
				select  * from  db9.user ;
			end
			//
			delimiter ;
			

		2.3.2 执行存储过程
			call  库名.存储过程名();

		2.3.3 查看存储过程
				2.3.3.1 查看服务器上已有的存储过程
	select db,name from mysql.proc where type="PROCEDURE" \G;					
				2.3.3.2 查看存储过程的功能代码
	select db,name,body from mysql.proc
             where type="PROCEDURE" and name="say1" \G;


		2.3.4 删除存储过程
			drop  procedure 库名.存储过程名;

	2.3存储过程进阶
		2.3.1 变量类型：
			全局变量：数据库服务启动时定义的变量
		mysql> show global variables;
		mysql> show global variables like "%version%";
		mysql> select  @@version;
		mysql> show global variables like "%host%";
		mysql> select @@hostname;

			会话变量：客户端连接服务器后产生的变量
		mysql> show session variables;
		mysql> show session variables like  "%time%";
		mysql> show session variables like "time_zone";
		mysql> set session sort_buffer_size = 40000; 
		mysql> show session variables like "sort_buffer_size";


			用户变量：当前连接服务器用户定义的变量

		mysql> set  @i=7 , @j=9 , @name="bob";

		mysql> select  @i , @j , @name;
		mysql> select  count(username) into @x from db9.user 
				where shell!="/bin/bash"
			局部变量： 在存储过程里定义的变量

			mysql> delimiter //
			mysql> create procedure  say2()
				begin
        				declare  name  char(10);
        				declare  age  int;
        				set name="bob",age=29;
        				select  name , age;
				end
				//
				delimiter ;

			mysql> call  say2();
				
			mysql> delimiter //
                        mysql> create procedure  say3()
                                begin
                                        declare  x  int;
                                        declare  y  int;
  select count(username) into x  from db9.user where shell="/bin/bash";
  select count(username) into y  from db9.user where shell!="/bin/bash";
					select  x , y;
                                end     
                                //
                                delimiter ;

			mysql> call  say3();

	等一下广州中心   到 15：15 上课。
		2.3.2 存储过程参数
				参数类型: in  out  inout			
			in  把数据传递给存储过程处理
			out 接收存储过程的处理结果
			inout 前2者的功能结合.
			delimiter //
		create procedure  库.存储过程名(类型   参数名  数据类型)
			begin
        			功能代码
			end
			//
			delimiter ;


use db9;
delimiter //
create procedure  say1()
begin
	select  count(*) from  db9.user;
end
//
delimiter ;

delimiter //
create procedure  say2()
begin
	declare  name  char(10);
	declare  age  int;
	set name="bob",age=29;
	select  name , age;	
end
//
delimiter ;


delimiter //
create procedure  say4( in user_name char(10) )
begin
	select username from db9.user where  username=user_name;
end
//
delimiter ;

call  say4("tom");
call  say4("root");
call  say4("mysql");
call  say4("abrt");


delimiter //
create procedure  say5( in shell_name char(25) , out numbers int )
begin
   select count(username) into numbers from db9.user where  shell=shell_name;
   select  numbers;
end
//
delimiter ;

call  say5("/bin/bash", @x );
select  @x ;


call  say5("/sbin/nologin", @y );
select  @y;
			 
		2.3.4 算数运算 +  -  *  /或DIV     % 
			 mysql> set  @i =  1  +  2 ;
			 mysql> select  @i;
			 mysql> set  @x=9  ,  @y = 8 ;
			 mysql> set @z =  @x  + @y ;
			 mysql> select  @z;
			 mysql> set @k =  @z  * 3 ;
			 mysql> select  @k;

		2.3.5 流程控制
			2.3.5.1   条件判断
			2.3.5.2   if结构  （选择结构）
				

delimiter //
create procedure  say8( in  x  int )
begin
	if  x  <  10  then    
		select  * from db9.user where id <= x;
        end if;
end
//
delimiter ;							  

call  say8(3);
call  say8(11);

delimiter //
create procedure  say9( in  x  int )
begin
        if  x  <  10  then
                select  * from db9.user where id <= x;
	else
		select  * from db9.user where id > x;
        end if;
end
//
delimiter ;
call say9(3);
call say9(19);

			2.3.5.3	  循环结构(需要重复执行的命令放到循环结构)
					while循环
					while  条件判断  do
        					循环体
					end   while ;

delimiter //
create procedure  p1(in  line_num int)
begin
	declare y int;
	set y = 1;
	while  y <=  line_num  do   
		select  y;    
		set y = y + 1 ; 	
	end while ;
end
//
delimiter ;

call p1(3);
call p1(5);
call p1(10);







					loop 循环
					无条件、反复执行某一段代码
					 loop
						循环体
					 end loop ;

delimiter //
create procedure  p3()
begin
	declare  x  int;
	set  x  = 1;
	loop
	   select  x;	
	end loop;
end
//
delimiter ;

call p3();

					repeate循环
					当条件成立时结束循环
					repeat
        					循环体
        					.. ..
        					until   条件判断   
					end   repeat;

delimiter //
create procedure  p4(in  y int)
begin
	declare x  int;
	set x = 1;
	repeat
		select x;
		set x  = x  + 1 ;
		until  x  > y
	end repeat;
end
//
delimiter ;
call p4(10);
call p4(3);

			2.3.5.4  流程控制命令
				 控制循环结构的执行。while loop  repeat
					LEAVE    结束循环
					ITERATE  结束本次循环，并开始下次循环

delimiter //
create procedure  p7()
begin
	declare  x  int;
	set x  = 1;
	abc:while  x  <= 10 do
		if x = 5 then
		   LEAVE abc ;
		end if;
		select  x;
		set  x  = x  +  1;
	end while;
end
//
delimiter ;
call  p7();
		休息到 10：15 

delimiter //
create procedure  p9()
begin
        declare  x  int;
        set x  = 1; 
        bcd:while  x  <= 10 do
		if x = 5 or x = 6  then
			set  x  = x  + 1  ;
			ITERATE bcd;
		end if;
                select  x;
                set  x  = x  +  1;
        end while;
end     
//
delimiter ;
call  p9();
		到 10：30 		
			2.3.5.5   例子
delimiter //
create procedure  p13(in  num  int)
begin
	if num is not null then
	    select  * from db9.user where id <= num;
	else
	    select  * from db9.user where id=1;
	end if;	
end
//
delimiter ;

call p13(5);
select @x ;
call  p13(@x);
		 练习到 10：50 

4 
+++++++++++++++++++++++++++++++++++++
delimiter //
create procedure  say6( inout  line_num  int  )
begin
	select  * from db9.user where id <= line_num ;
	select  count(username) into line_num from db9.user;
	select  line_num;
end
//
delimiter ;
  
set @x = 3;

call  say6(@x);

select  @x ;
		练习到 17： 05

delimiter //
create procedure  say7()
begin
	declare x  int;
	declare y  int;
	declare z  int;
	set  x  = 0 , y = 0;
   select count(username) into x  from db9.user where shell="/bin/bash";
   select count(username) into y  from db9.user where shell="/sbin/nologin";
	set z = x  + y ;
	select x , y , z ;
end
//
delimiter ;



delimiter //
create procedure  say1()
begin
end
//
delimiter ;

+++++++++++++DBA2_day05++++++++++++++++++++++++++++++
	单表过大会有什么影响？
	如何解决单表过大的问题？
	
	11:10 上课

一、数据分片
	1.1 数据分片介绍
	1.2 数据分片方式
	1.3 MyCat软件介绍
	1.4 拓扑结构
	1.5 环境准备
	1.6 配置mycat服务
		1.6.1 安装提供服务的软件包mycat
			]# rpm -q java-1.8.0-openjdk
			]# which  java
			[root@mysql57 ~]# java -version
				openjdk version "1.8.0_131"
			OpenJDK Runtime Environment (build 1.8.0_131-b12)
OpenJDK 64-Bit Server VM (build 25.131-b12, mixed mode)
[root@mysql57 ~]#
	]# tar -zxvf Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz
	]# mv mycat /usr/local/
	[root@mysql57 ~]# ls /usr/local/mycat/
bin  catlet  conf  lib  logs  version.txt

		1.6.2 修改配置文件
			1.6.2.1 定义客户端连接使用的用户及密码和数据库名
				]# cp  /usr/local/mycat/conf/server.xml /root/
				]# vim /usr/local/mycat/conf/server.xml (使用默认配置)

			1.6.2.2 配置数据分片
				]# cp  /usr/local/mycat/conf/schema.xml /root/
				]# cd  /usr/local/mycat/conf/      休息到15：20
				]# sed -i  '56,77d' schema.xml
				]# sed -i  '39,42d' schema.xml

				]# vim schema.xml	(手动删除注释行) <!--  -->
				<schema>....</schema>  指定分片的表         						   
				<dataNode    />   指定存储数据使用的库
				<dataHost> ....</dataHost>  指定指定数据库服务器ip地址

			1.6.2.3 根据配置文件的设置在数据库服务器上做对应的配置
				 1 创建存储数据的库
				   53 mysql>  create database  db1;
				   54 mysql>  create database  db2;
				   55 mysql>  create database  db3;

				 2 在所有数据库服务器上创建授权用户
				   53 mysql>grant all on  *.* to jingyaya@"%" 
						identified  by "123qqq...A";
				   54 mysql>grant all on  *.* to jingyaya@"%" 
						identified  by "123qqq...A";
						
				   55 mysql>grant all on  *.* to jingyaya@"%" 
						identified  by "123qqq...A";

				 3 在mycat 服务器上测试授权用户	
			           ]#mysql -h192.168.4.53 -ujingyaya -p123qqq...A  db1
			           ]#mysql -h192.168.4.54 -ujingyaya -p123qqq...A  db2
			           ]#mysql -h192.168.4.55 -ujingyaya -p123qqq...A  db3
		1.6.3 启动服务
		      ]# /usr/local/mycat/bin/mycat  start 启动服务
			 Starting Mycat-server...

		      ]# /usr/local/mycat/bin/mycat  stop  停止服务

		1.6.4 查看服务信息
			]# netstat -utnlp  | grep  :8066
			tcp6       0      0 :::8066    :::*    LISTEN      5614/java           
			]# ps -C java
  			   PID TTY          TIME CMD
 			   5614 ?        00:00:02 java

		1.6.5 排错阶段   20分钟到 16：00
			~]# tail  -f /usr/local/mycat/logs/wrapper.log
	1.7测试配置
		1.7.1 在客户端50 主机连接 mycat 服务器
	 	]# mysql -h192.168.4.57 -P8066  -uroot  -p123456
		mysql> show  databases;
		mysql> use  TESTDB;
		mysql> show tables;
		mysql> desc  employee;
		       ERROR 1146 (42S02): Table 'db3.employee' doesn't exist
	
		mysql> exit

		57]#
		]# vim /usr/local/mycat/conf/partition-hash-int.txt
			10000=0
			10010=1
			10020=2
		:wq
		]# /usr/local/mycat/bin/mycat stop
   		]# /usr/local/mycat/bin/mycat start
   		]# netstat -utnlp  | grep  :8066

		50]# mysql  -h192.168.4.57  -uroot -p123456
		mysql> use TESTDB;                                休息到 17：00 
		mysql> create table  employee( //枚举法 分片规则
		        ID int  primary key auto_increment,
		        sharding_id int,
			name char(15),
			sex enum("boy","girl"),
			pay float(7,2)
			);
			Query OK, 0 rows affected (0.86 sec)
		mysql> insert into employee(sharding_id,name,sex,pay)
		       values(10000,"bob","boy",28000);
		
		mysql> insert into employee(sharding_id,name,sex,pay)
			values(10000,"jim","boy",28000);

		mysql> insert into employee(sharding_id,name,sex,pay)
			values(10010,"lucy","boy",28000);
		
		mysql> insert into employee(sharding_id,name,sex,pay)
			values(10010,"jack","boy",28000);
		
		mysql> insert into employee(sharding_id,name,sex,pay)
			values(10020,"jerry","boy",28000);

		mysql> insert into employee(sharding_id,name,sex,pay)
			values(10020,"mark","boy",28000);

		mysql> select  * from employee;

		测试:分别查看53 53 55 的db1 db2  db3 库都会有employee表
		53mysql> desct db1.employee;
			 select  * from db1.employee;

		54mysql> desct db2.employee
			select  * from db2.employee;

		55mysql> desct db3.employee
			 select  * from db3.employee;

	1.8  在mycat服务器上添加新库新表
		1.8.1 修改服务的主配置文件
			]# vim /usr/local/mycat/conf/server.xml
			<user name="root">
                		<property name="password">123456</property>
                		<property name="schemas">TESTDB,BBSDB</property>
			:wq
			 ]# vim /usr/local/mycat/conf/schema.xml
			    <schema name="BBSDB" checkSQLschema="false" sqlMaxLimit="100">
                		<table name="student" primaryKey="ID" dataNode="dn1,dn2,dn3" rule="sharding-by-intfile" />
                                <table name="company" primaryKey="ID" type="global" dataNode="dn1,dn2,dn3" />
                            </schema>
			:wq
		1.8.2 重启服务
			]# /usr/local/mycat/bin/mycat  stop				
			]# /usr/local/mycat/bin/mycat  start
			]# netstat  -utnlp  | grep  :8066
		1.8.3 客户端测试
			]# mysql -h192.168.4.57 -P8066  -uroot  -p123456
			mysql> show databases;
				+----------+
				| DATABASE |
				+----------+
				| BBSDB    |
				| TESTDB   |
				+----------+
				mysql> use BBSDB;
				mysql> show tables;
					+-----------------+
					| Tables in BBSDB |
					+-----------------+
					| company         |
					| student         |
					+-----------------+
mysql> create table  company(ID int primary key  auto_increment, cname char(10));
Query OK, 0 rows affected (0.93 sec)	
mysql> insert into  company(cname)values("tarena");
Query OK, 1 row affected (0.14 sec)
mysql> insert into  company(cname)values("tarenaA");
Query OK, 1 row affected (0.08 sec)
mysql> insert into  company(cname)values("tarenaB");
Query OK, 1 row affected (0.06 sec)
mysql> insert into  company(cname)values("tarenaD");
Query OK, 1 row affected (0.15 sec)

mysql> insert into  company(cname)values("tarenaC");
Query OK, 1 row affected (0.06 sec)
mysql> select  * from  company;


53]# mysql> select  * from db1.company;
54]# mysql> select  * from db2.company;
55]# mysql> select  * from db3.company;

二、mysql性能优化
	2.1 导致数据库服务处理速度慢的原因有那些？
		服务器硬件配置低： 
				cpu       memory      disk
				uptime	  free -m     iostat
		数据库服务运行参数配置 不合理：
			 查看所有变量 
					mysql> show variables;
					mysql> show variables  like "%binlog%";

	 		 查看状态变量
					mysql> show global status ;
					mysql> show global status like "%innodb%";

			 与服务性能相关的常用参数配置：
					并发及连接控制：
					mysql> show  variables like  "max_connections";
					mysql> set  global max_connections=200;

			]#vim /etc/my.cnd
				[mysqld]
				max_connections=200
			:wq
			mysql> show global status like  "Max_used_connections";
			
			曾经有过的最大连接数/并发连接数=0.85

			连接超时 connect_timeout  10 秒
			等待关闭连接的不活动超时秒数 wait_timeout 288000秒

			key_buffer-size  用于MyISAM引擎的关键索引缓存大小
			mysql> set global key_buffer_size=838860800;

			普通索引  index   (给字段的值排队)
			stutab  ------>  stutab.frm  stu.ibd
					 stutab.frm  stutab.MYI  stutab.MYD									/var/lib/mysql/
			name  index
			bob
			jim
			lucy
			select name from stutab where name="zhangsan";

			sort_buffer_size 为每个要排序的线程分配此大小的缓存空间

			mysqld----> select  * from stutab order by  age  desc;

		        read_buffer_size  为顺序读取表记录保留的缓存大小 
		        mysqld ----> select  * from stutab;

			thread_cache_size 允许保存在缓存中被重用的线程数量

			table_open_cache 2000	 为所有线程缓存的打开的表的数量
			
		pc1	select   a1  mysql ----disk ---a1  -----> memory   
		pc2	select   b1  
		pc3     select   b1

		2.2 SQL查询优化
			 2.2.1  启动日志文件记录客户端连接服务器后执行的sql命令
				查询日志文件：记录执行的所有SQL命令
				 ]# vim /etc/my.cnf
					[mysqld]
					general-log
				 :wq
				]# systemctl restart mysqld
				]# tail -f /var/lib/mysql/mysql55.log
				
				mysql> desc mysql.user;	
				mysql> select  * from  mysql.user;

				慢查询日志文件：记录超过超时时间 显示查询结果的SQL命令
					]# vim /etc/my.cnf
                                        [mysqld]
                                        slow-query-log
					log-queries-not-using-indexes
                                 :wq
				 ]# systemctl restart mysqld
				 ]# tail -f /var/lib/mysql/mysql55-slow.log

				 mysql> select  * from mysql.user;
				 mysql> select sleep(12);
				
			]# mysqldumpslow /var/lib/mysql/mysql55-slow.log  > /root/sql.txt


			查看数据库服务查询缓存的大小

mysql> show variables like  "query_cache%";
+------------------------------+---------+
| Variable_name                | Value   |
+------------------------------+---------+
| query_cache_limit            | 1048576 |
| query_cache_min_res_unit     | 4096    |
| query_cache_size             | 1048576 |
| query_cache_type             | OFF     |
| query_cache_wlock_invalidate | OFF     |
+------------------------------+---------+
			查看数据库服务当前查询缓存的统计信息
mysql> show  global status like "Qcache_%";
+-------------------------+---------+
| Variable_name           | Value   |
+-------------------------+---------+
| Qcache_free_blocks      | 1       |
| Qcache_free_memory      | 1031832 |
| Qcache_hits             | 0       | 在查询缓存里查找的数据的次数    5
| Qcache_inserts          | 0       | 在查询缓存里查找数据的次数     100
| Qcache_lowmem_prunes    | 0       |
| Qcache_not_cached       | 4       |
| Qcache_queries_in_cache | 0       |
| Qcache_total_blocks     | 1       |
+-------------------------+---------+
			2.4  优化数据存储架构 （查看是否有数据传输瓶颈 和 单点故障）

			2.5  检测网络流量（带宽）
+++++++++++++NoSQL_day01++++++++++++++++
1 部署Redis服务
	1.1 装包
		]# rpm  -q  gcc  ||  yum  -y  install  gcc
		]# tar -zxvf redis-4.0.8.tar.gz 
    		]# cd redis-4.0.8/
    		]# make
    		]# make install	
	1.2 初始化配置
		]# ./utils/install_server.sh
[root@host50 redis-4.0.8]# ./utils/install_server.sh 
Welcome to the redis service installer
This script will help you easily set up a running redis server

Please select the redis port for this instance: [6379] 
Selecting default: 6379
Please select the redis config file name [/etc/redis/6379.conf] 
Selected default - /etc/redis/6379.conf
Please select the redis log file name [/var/log/redis_6379.log] 
Selected default - /var/log/redis_6379.log
Please select the data directory for this instance [/var/lib/redis/6379] 
Selected default - /var/lib/redis/6379
Please select the redis executable path [/usr/local/bin/redis-server] 
Selected config:
Port           : 6379
Config file    : /etc/redis/6379.conf
Log file       : /var/log/redis_6379.log
Data dir       : /var/lib/redis/6379
Executable     : /usr/local/bin/redis-server
Cli Executable : /usr/local/bin/redis-cli
Is this ok? Then press ENTER to go on or Ctrl-C to abort.
Copied /tmp/6379.conf => /etc/init.d/redis_6379
Installing service...
Successfully added to chkconfig!
Successfully added to runlevels 345!
Starting Redis server...
Installation successful!

[root@host50 redis-4.0.8]# netstat -utnlp  | grep  :6379
tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN      8127/redis-server 1


[root@host50 redis-4.0.8]# redis-cli 
127.0.0.1:6379> ping
PONG
127.0.0.1:6379> set name bob
OK
127.0.0.1:6379> get name
"bob"
127.0.0.1:6379> exit
[root@host50 redis-4.0.8]# 

[root@host50 redis-4.0.8]# /etc/init.d/redis_6379 stop
Stopping ...
Redis stopped
[root@host50 redis-4.0.8]# netstat  -utnlp  | grep  :6379
[root@host50 redis-4.0.8]# ps -C redis-server
  PID TTY          TIME CMD
[root@host50 redis-4.0.8]# 
[root@host50 redis-4.0.8]# /etc/init.d/redis_6379 start
Starting Redis server...
[root@host50 redis-4.0.8]# 
[root@host50 redis-4.0.8]# ps -C redis-server
  PID TTY          TIME CMD
 8222 ?        00:00:00 redis-server
[root@host50 redis-4.0.8]# 
[root@host50 redis-4.0.8]#  netstat  -utnlp  | grep  :6379
tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN      8222/redis-server 1 
[root@host50 redis-4.0.8]# 

[root@host50 redis-4.0.8]# redis-cli 
127.0.0.1:6379> get name
"bob"
127.0.0.1:6379> exit

[root@host50 redis-4.0.8]# ls /var/lib/redis/6379/
dump.rdb

	1.3 数据常用操作指令   休息到 10:15
127.0.0.1:6379> keys *
1) "name"
127.0.0.1:6379> 
127.0.0.1:6379> 
127.0.0.1:6379> keys ??
(empty list or set)
127.0.0.1:6379> 
127.0.0.1:6379> set sex girl
OK
127.0.0.1:6379> keys ???
1) "sex"
127.0.0.1:6379>

127.0.0.1:6379> EXISTS age school
(integer) 0
127.0.0.1:6379> get age
(nil)
127.0.0.1:6379> EXISTS name
(integer) 1
127.0.0.1:6379> get name
"bob"
127.0.0.1:6379>


127.0.0.1:6379> select  16
(error) ERR DB index is out of range
127.0.0.1:6379> 
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> select  2
OK
127.0.0.1:6379[2]> keys *
(empty list or set)
127.0.0.1:6379[2]> select  0
OK
127.0.0.1:6379>

127.0.0.1:6379> EXISTS name
(integer) 1
127.0.0.1:6379> ttl name
(integer) -1
127.0.0.1:6379> EXPIRE name 20
(integer) 1
127.0.0.1:6379> ttl name
(integer) 14
127.0.0.1:6379> ttl name
(integer) 2
127.0.0.1:6379> EXISTS name
(integer) 0


127.0.0.1:6379> set x 101
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> type x
string
127.0.0.1:6379> type sex
string
127.0.0.1:6379>

127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 

127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> select  1
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> MOVE sex 1
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> keys *
1) "sex"
127.0.0.1:6379[1]> MOVE sex 0
(integer) 1
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> 

127.0.0.1:6379> keys *
1) "x"
2) "sex"
127.0.0.1:6379> del sex
(integer) 1
127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> 


127.0.0.1:6379> keys *
1) "x"
127.0.0.1:6379> select 1
OK
127.0.0.1:6379[1]> set y 99
OK
127.0.0.1:6379[1]> keys *
1) "y"
127.0.0.1:6379[1]> FLUSHALL
OK
127.0.0.1:6379[1]> keys *
(empty list or set)
127.0.0.1:6379[1]> select  0
OK
127.0.0.1:6379> keys *
(empty list or set)
127.0.0.1:6379>

127.0.0.1:6379> keys *
1) "x"
2) "y"
3) "z"
127.0.0.1:6379> save

127.0.0.1:6379> SHUTDOWN
not connected> exit
[root@host50 ~]# netstat -utnlp  | grep  :6379
[root@host50 ~]# 
[root@host50 ~]# /etc/init.d/redis_6379 start
Starting Redis server...
[root@host50 ~]# 
	1.4 配置文件解析 /etc/redis/6379.conf
	]# cp /etc/redis/6379.conf  /root/
	]# vim /etc/redis/6379.conf

        1.5 给服务设在连接密码
		vim /etc/redis/6379.conf 
		501：requirepass 123456
		:wq
		]# /etc/init.d/redis_6379 stop
		]# /etc/init.d/redis_6379 start
		[root@host50 ~]# redis-cli 
127.0.0.1:6379> ping
(error) NOAUTH Authentication required.
127.0.0.1:6379> 
127.0.0.1:6379> auth 123456
OK
127.0.0.1:6379> ping
PONG
127.0.0.1:6379> keys *
1) "z"
2) "x"
3) "y"
127.0.0.1:6379> get z
"3"
127.0.0.1:6379>exit

[root@host50 ~]# redis-cli  -a  123456  shutdown
[root@host50 ~]# netstat -utnlp  | grep  :6379
[root@host50 ~]# 


		1.6 修改服务使用ip地址和端口号
			端口号 6350
			IP地址 192.168.4.50
		]# ]# vim /etc/redis/6379.conf 			
			93 port 6350
			70 bind 192.168.4.50
		:wq
		]# /etc/init.d/redis_6379 start
i		Starting Redis server...

[root@host50 ~]# ps -C redis-server
  PID TTY          TIME CMD
10878 ?        00:00:00 redis-server
 
[root@host50 ~]# netstat -utnlp  | grep :6350
tcp        0      0 192.168.4.50:6350       0.0.0.0:*               LISTEN      10878/redis-server  
[root@host50 ~]#		

[root@host50 ~]# redis-cli -h 192.168.4.50 -p 6350  -a 123456   //连接服务
192.168.4.50:6350> ping
PONG
192.168.4.50:6350> keys *
1) "x"
2) "z"
3) "y"
192.168.4.50:6350> exit
[root@host50 ~]# 
[root@host50 ~]# redis-cli -h 192.168.4.50 -p 6350  -a 123456 shutdown  //停止服务
[root@host50 ~]# 
[root@host50 ~]# netstat -utnlp  | grep  :6350

			1.7、修改/etc/init.d/redis_6379 脚本代码 
			     使其可以停止 设置了ip地址 端口 和 密码 的redis 服务

			]# /etc/init.d/redis_6379 start
                       
			]# vim /etc/init.d/redis_6379 
			43 $CLIEXEC -h 192.168.4.50 -p 6350 -a 123456  shutdown

			:wq

			 ]# /etc/init.d/redis_6379 stop
			 ]# netstat -utnlp  | grep  :6350  //查看不到端口了
二、部署LNMP+Redis
    要求：配置50主机运行nginx网站服务且可以解释php代码，并把网站的数据存储在本机的内存里

	  1  安装源码的nginx软件     

	  2  安装管理php程序的php-fmp服务软件包
		]#  yum  -y  install php-fpm-5.4.16-42.el7.x86_64.rpm

	  3 启动php-fmp服务
   		]#  systemctl  start php-fpm
   		]#  netstat  -utnlp  | grep  :9000
	  4 修改nginx服务配置文件
		]# vim /usr/local/nginx/conf/nginx.conf
			65         location ~ \.php$ {
 			66             root           html;
 			67             fastcgi_pass   127.0.0.1:9000;
 			68             fastcgi_index  index.php;
 			69             include        fastcgi.conf;
 			70         }
		:wq
	  5 启动nginx服务
			[root@mysql50 ~]# /usr/local/nginx/sbin/nginx  -t
nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful

			]# systemctl  status httpd
			]# systemctl  stop httpd
			]# systemctl  disable httpd

[root@mysql50 ~]# /usr/local/nginx/sbin/nginx
[root@mysql50 ~]# netstat  -utnlp  | grep  :80
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      23505/nginx: master 
[root@mysql50 ~]# 

	  6 编写php脚本文件
		]# vim /usr/local/nginx/html/test.php
			<?php
				echo  "hello world!!!";
			?>
		:wq 

	  7  客户端访问nginx服务的php脚本  http://192.168.4.50/test.php
	

	  8  配置PHP支持Redis
			8.1  运行Redis服务

			8.2  配置php支持Redis
				]# yum  -y  install php
				]# yum  -y  install php-devel-5.4.16-42.el7.x86_64.rpm
				]# tar -zxvf php-redis-2.2.4.tar.gz 
				]# cd phpredis-2.2.4/
				]# phpize 
				]# ./configure  --with-php-config=/usr/bin/php-config
				]# make
				]# make install
				]# ls  /usr/lib64/php/modules/

		    	 	]# vim /etc/php.ini
					728 extension_dir = "/usr/lib64/php/modules/"
 					730 extension = "redis.so"
 				:wq
				]# systemctl  restart php-fpm
				]# php -m  | grep  -i redis
					redis
		休息到 17：15
]# vim /usr/local/nginx/html/test2.php 
<?php
$redis = new redis();
$redis->connect('192.168.4.50',6350);
$redis ->auth("123456");
$redis->set("school","tarena");
echo $redis->get("school");
?>
[root@mysql50 ~]#  
[root@mysql50 ~]# curl  http://localhost/test2.php
tarena

[root@mysql50 ~]# redis-cli  -h 192.168.4.50 -p 6350 -a 123456
192.168.4.50:6350> keys *
1) "c"
2) "d"
3) "a"
4) "b"
5) "school"
6) "redistest"
192.168.4.50:6350> get school
"tarena"
192.168.4.50:6350> 

+++++++++++++++NoSQL_day02+++++++++++++++++++++++++++++++
准备8台 redis服务器
	ip              port
redisA 	192.168.4.51 	6351
redisB 	192.168.4.52 	6352
redisC 	192.168.4.53	6353
redisD 	192.168.4.54	6354
redisE  192.168.4.55	6355
redisF  192.168.4.56	6356
	192.168.4.57    6357 
	192.168.4.58    6358
       scp -r redis-cluster   root@192.168.4.51:/root/

一、部署redis集群
	1.1 环境准备
		准备6台redis服务器 并 清空数据
		redisA 	192.168.4.51 	6351
		redisB 	192.168.4.52 	6352
		redisC 	192.168.4.53	6353
		redisD 	192.168.4.54	6354
		redisE  192.168.4.55	6355
		redisF  192.168.4.56	6356

	1.2 启用集群 (在6台redis服务分别启用集群模式) 到 09：40
                以主机51为例
		]# redis-cli  -h 192.168.4.51 -p 6351 shutdown
		]# vim  /etc/redis/6379.conf
		    port  6351
		    bind  192.168.4.51
			815 cluster-enabled yes
			823 cluster-config-file nodes-6351.conf
			829 cluster-node-timeout 5000 
	 	:wq
		]# /etc/init.d/redis_6379  start

[root@mysql51 ~]# netstat -utnlp  | grep  -i redis-server
tcp        0      0 192.168.4.51:6351       0.0.0.0:*               LISTEN      1768/redis-server 1 
tcp        0      0 192.168.4.51:16351      0.0.0.0:*               LISTEN      1768/redis-server 1
	
	1.3 让51 主机做管理主机，提供管理集群的ruby脚本 redis-trib.rb
		]# yum  -y  install ruby
		]# yum  -y  install ruby-devel-2.0.0.648-30.el7.x86_64.rpm
		]# which gem
		]# gem install  redis-3.2.1.gem
				
		]# cd redis-4.0.8/src
		]# mkdir /root/bin
		]# cp cp redis-trib.rb  /root/bin/
		]# chmod  +x  /root/bin/redis-trib.rb
		]# redis-trib.rb help
       1.4 创建集群
[root@mysql51 ~]# redis-trib.rb create  --replicas  1  \
> 192.168.4.51:6351  192.168.4.52:6352 \
> 192.168.4.53:6353  192.168.4.54:6354 \
> 192.168.4.55:6355  192.168.4.56:6356
>>> Creating cluster
>>> Performing hash slots allocation on 6 nodes...
Using 3 masters:
192.168.4.51:6351
192.168.4.52:6352
192.168.4.53:6353
Adding replica 192.168.4.55:6355 to 192.168.4.51:6351
Adding replica 192.168.4.56:6356 to 192.168.4.52:6352
Adding replica 192.168.4.54:6354 to 192.168.4.53:6353
M: 0ebac7b9b40b4bd28e65dd67b4d5fb96cc2264bb 192.168.4.51:6351
   slots:0-5460 (5461 slots) master
M: 03b097eaae3d7920d66885a587d8ed9ae3fcfada 192.168.4.52:6352
   slots:5461-10922 (5462 slots) master
M: 52fde1cdd9e3662c43e2a71fcdcfcb0f397b2c8c 192.168.4.53:6353
   slots:10923-16383 (5461 slots) master
S: 00010838e239b3428ffc316634bb9a7f2a6719a9 192.168.4.54:6354
   replicates 52fde1cdd9e3662c43e2a71fcdcfcb0f397b2c8c
S: f72ae46aeae8fbb7c185437d68c0158bd6b55ce5 192.168.4.55:6355
   replicates 0ebac7b9b40b4bd28e65dd67b4d5fb96cc2264bb
S: ca7c7204d1f303ebd8fc9b8ca61037fc9fa0bb27 192.168.4.56:6356
   replicates 03b097eaae3d7920d66885a587d8ed9ae3fcfada
Can I set the above configuration? (type 'yes' to accept): yes
>>> Nodes configuration updated
>>> Assign a different config epoch to each node
>>> Sending CLUSTER MEET messages to join the cluster
Waiting for the cluster to join..
>>> Performing Cluster Check (using node 192.168.4.51:6351)
M: 0ebac7b9b40b4bd28e65dd67b4d5fb96cc2264bb 192.168.4.51:6351
   slots:0-5460 (5461 slots) master
   1 additional replica(s)
M: 52fde1cdd9e3662c43e2a71fcdcfcb0f397b2c8c 192.168.4.53:6353
   slots:10923-16383 (5461 slots) master
   1 additional replica(s)
S: ca7c7204d1f303ebd8fc9b8ca61037fc9fa0bb27 192.168.4.56:6356
   slots: (0 slots) slave
   replicates 03b097eaae3d7920d66885a587d8ed9ae3fcfada
M: 03b097eaae3d7920d66885a587d8ed9ae3fcfada 192.168.4.52:6352
   slots:5461-10922 (5462 slots) master
   1 additional replica(s)
S: 00010838e239b3428ffc316634bb9a7f2a6719a9 192.168.4.54:6354
   slots: (0 slots) slave
   replicates 52fde1cdd9e3662c43e2a71fcdcfcb0f397b2c8c
S: f72ae46aeae8fbb7c185437d68c0158bd6b55ce5 192.168.4.55:6355
   slots: (0 slots) slave
   replicates 0ebac7b9b40b4bd28e65dd67b4d5fb96cc2264bb
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.


[root@mysql51 ~]# redis-cli  -h 192.168.4.52  -p 6352
192.168.4.52:6352> cluster info
192.168.4.52:6352> cluster nodes

192.168.4.52:6352> cluster nodes
52fde1cdd9e3662c43e2a71fcdcfcb0f397b2c8c 192.168.4.53:6353@16353 master - 0 1553568700000 3 connected 10923-16383
f72ae46aeae8fbb7c185437d68c0158bd6b55ce5 192.168.4.55:6355@16355 slave 0ebac7b9b40b4bd28e65dd67b4d5fb96cc2264bb 0 1553568699000 5 connected
ca7c7204d1f303ebd8fc9b8ca61037fc9fa0bb27 192.168.4.56:6356@16356 slave 03b097eaae3d7920d66885a587d8ed9ae3fcfada 0 1553568699000 6 connected
0ebac7b9b40b4bd28e65dd67b4d5fb96cc2264bb 192.168.4.51:6351@16351 master - 0 1553568700508 1 connected 0-5460
00010838e239b3428ffc316634bb9a7f2a6719a9 192.168.4.54:6354@16354 slave 52fde1cdd9e3662c43e2a71fcdcfcb0f397b2c8c 0 1553568700407 4 connected
03b097eaae3d7920d66885a587d8ed9ae3fcfada 192.168.4.52:6352@16352 myself,master - 0 1553568699000 2 connected 5461-10922
192.168.4.52:6352> 
192.168.4.52:6352> 
192.168.4.52:6352> cluster info
cluster_state:ok
cluster_slots_assigned:16384
cluster_slots_ok:16384
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:6
cluster_size:3
cluster_current_epoch:6
cluster_my_epoch:2
cluster_stats_messages_ping_sent:954
cluster_stats_messages_pong_sent:920
cluster_stats_messages_meet_sent:2
cluster_stats_messages_sent:1876
cluster_stats_messages_ping_received:917
cluster_stats_messages_pong_received:956
cluster_stats_messages_meet_received:3
cluster_stats_messages_received:1876
192.168.4.52:6352> 

	1.5 在客户端50  访问集群
		]# redis-cli  -c   -h 192.168.4.54  -p 6354 
		> keys *
		> set x  101
		> set y  201
		> set z  301
		> keys *
		> get x
		> get y
		> get z

三、集群工作原理
	

二、集群管理
	]# redis-trib.rb  check 192.168.4.56:6356

	[root@mysql51 ~]# redis-trib.rb  info 192.168.4.56:6356
	192.168.4.53:6353 (c18062ba...) -> 2 keys | 5461 slots | 1 slaves.
	192.168.4.51:6351 (1620706a...) -> 1 keys | 5461 slots | 1 slaves.
	192.168.4.52:6352 (819ed03e...) -> 3 keys | 5462 slots | 1 slaves.
	[OK] 6 keys in 3 masters.
	0.00 keys per slot on average.


	2.1 向集群中添加新redis服务器
		2.1.1  添加主库 (把redis服务器57添加到集群里做主库)
		       1 57 运行redis服务且启用了集群模式 且本机没有数据
				14:49			

		       2 在管理主机51 上做如下配置:
			 	2.1 添加新主机
		]# redis-trib.rb  add-node 192.168.4.57:6357  192.168.4.51:6351
		]# redis-trib.rb  check 192.168.4.51:6351

			 	2.2 分配hash slots 
		]# redis-trib.rb  reshard 192.168.4.53:6353
			指定移出hash槽个数
			指定接收hash槽主机ID
			指定移出hash槽主机ID
			yes
		]# redis-trib.rb  check 192.168.4.51:6351
		]# redis-trib.rb  info 192.168.4.51:6351
		
		2.1.2  从库(把redis服务器58添加到集群里做从库)
			1 配置58主机 运行redis服务且启用了集群模式 且本机没有数据
									15:43 
			2 在管理主机51 上做如下配置:
				2.1 添加主机
					]# redis-trib.rb  add-node  --slave  \
					   192.168.4.58:6358  192.168.4.51:6351

				2.2 查看集群信息
					]# redis-trib.rb check 192.168.4.51:6351
					]# redis-trib.rb info 192.168.4.51:6351


				2.3 客户端50 连接主库57 存储数据
		]# redis-cli  -c  -h 192.168.4.57 -p 6357
		> keys *
		> set  v1  99
				    客户端50 连接从库58 查看数据
		]# redis-cli  -c  -h 192.168.4.57 -p 6357
		> keys *

					15:58 

	 2.2 从集群中移除redis服务器（在管理主机51 上操作）
		2.2.1 移除从库
[root@mysql51 ~]# redis-trib.rb  del-node 192.168.4.53:6353 f630462c1c9eba24bbbcc45b12e3ee1da68adb7e
>>> Removing node f630462c1c9eba24bbbcc45b12e3ee1da68adb7e from cluster 192.168.4.53:6353
>>> Sending CLUSTER FORGET messages to the cluster...
>>> SHUTDOWN the node.


 	]# redis-trib.rb  info 192.168.4.53:6353
	]# redis-trib.rb  check  192.168.4.53:6353 				
							 16:25
		2.2.2 移除主库
			1  释放占用的hash槽
				]# redis-trib.rb  reshard  192.168.4.51:6351
				指定移出hash槽个数
				指定接收hash槽主机ID
				指定移出hash槽主机ID
				done
				yes
			2  移除主库服务器
[root@redisa ~]# redis-trib.rb  del-node  192.168.4.51:6351 11a1b2747c190d451d2522dc2e3a91909ba83bd7
>>> Removing node 11a1b2747c190d451d2522dc2e3a91909ba83bd7 from cluster 192.168.4.51:6351
>>> Sending CLUSTER FORGET messages to the cluster...
>>> SHUTDOWN the node.
[root@redisa ~]# 
			3 检测集群  
			   ]# redis-trib.rb  check  192.168.4.51:6351
 			   ]# redis-trib.rb  info  192.168.4.51:6351

			 16:46
			
	2.3 把移除的redis主机 再添加到集群里
	      redis服务器的操作： 
		]# /etc/init.d/redis_6379 start
		]# redis_cli  -h 192.168.4.57 -p 6357
		> cluster  reset
		> exit

	      管理主机的操作：
		]# redis-trib.rb  add-node  192.168.4.57:6357   192.168.4.51:6351
		]# redis-trib.rb  check  192.168.4.51:6351
		]# redis-trib.rb  info  192.168.4.51:6351

	   17：20

     2.4 什么情况下 集群会无法工作(无法存取数据)
		一组主从 全坏了 

     2.5 把所有的redis服务器恢复为独立的数据库服务器
		1 把redis 移出集群
		2 禁用集群功能
		3 清空数据库目录下的文件
		4 启动服务
		5 查看服务端口 （只有redis服务端口 没有集群端口）
		6 连接服务存取数据 ]#  redis-cli  -h ip地址  -p 端口号

+++++++++++++NoSQL_DAY03+++++++++++++++++++++++++++++
1 Redis主从复制
	1.1  相关命令
		指定主库ip地址  和 端口 
			> slaveof  192.168.4.51  6379    

		查看复制信息
			> info replication

		把从库还原为主库
			> slaveof  no  one

	1.2 修改配置文件指定主库
	         ]# vim /etc/redis/6379.conf
	     	   282 slaveof  192.168.4.51 6351
		 :wq

                 ]# /etc/init.d/redis_6379  stop
		 ]# /etc/init.d/redis_6379  start  
		

	1.3 有验证的主从配置
	     主库redis服务设置连接密码是123456
		  ]# /etc/init.d/redis_6379  stop
		 	requirepass 123456
		  :wq
		  ]# /etc/init.d/redis_6379  start

	     从库在配置文件里指定连接主库的密码 然后重启服务
		 ]# /etc/init.d/redis_6379  stop
		 ]# vim /etc/redis/6379.conf
			masterauth "123456"
		 :wq
		 ]# /etc/init.d/redis_6379  start

       1.4 把主机53 永久配置为 51的从库
		]# /etc/init.d/redis_6379  stop
		]# vim /etc/redis/6379.conf
		    slaveof  192.168.4.51 6379		
		    masterauth "123456"
		:wq
		]# /etc/init.d/redis_6379  start

      1.5 把主机54 永久配置为 53的从库
		]# /etc/init.d/redis_6379  stop
                ]# vim /etc/redis/6379.conf
                    slaveof  192.168.4.53 6353
                    #masterauth "123456"
                :wq
                ]# /etc/init.d/redis_6379  start
		

     1.6 哨兵模式 (监视主从复制结构中的主库 当主库不能提供服务器，从对应的
                  从库里选择新的主库)
		1  创建服务的主配置文件
			]# vim /etc/sentinel.conf
			     bind  0.0.0.0
			    sentinel monitor  ser51  192.168.4.51  6379     1
			    sentinel auth-pass  ser51  123456
			:wq
		2  启动哨兵服务
			]# redis-sentinel  /etc/sentinel.conf
		3   测试配置
			停止当前主库的redis 服务
			  ]# /etc/init.d/redis_6379  stop

			检查对应从库的复制信息 
			 > info  replication 

2 持久化 (把内存里的数据保存到硬盘)  
	2.1  RDB
		2.1.1  RDB 介绍
			

		使用备份的dump.rdb文件恢复数据
		50 备份		
			]# cp /var/lib/redis/6379/dump.rdb   /root/
			]# scp /root/dump.rdb   root@192.168.4.55:/tmp/

		55 恢复
			]# /etc/init.d/redis_6379 stop
			]# rm  -rf /var/lib/redis/6379/*
			]# cp /tmp/dump.rdb  /var/lib/redis/6379/
			]# /etc/init.d/redis_6379 start
			]# redis-cli  -h  192.168.4.55  -p 6355  
			]# > keys *
			
		14：27 郑州中心投影仪坏了 等多久 ？ 14：45

	2.2  AOF
		介绍
		只做追加操作的文件，Append Only File
		记录redis服务所有写操作
		不断的将新的写操作，追加到文件的末尾
		使用cat命令可以查看文件内容

		启用AOF
		]# vim /etc/redis/6379.conf
			 appendonly yes
			 appendfilename "appendonly.aof"
		:wq
		]# /etc/init.d/redis_6379 stop
		]# /etc/init.d/redis_6379 start
		]# redis-cli  -h  192.168.4.50  -p 6350 -a 123456
		> keys *
		> set v1 101
		> set v2 102
		]# cat /var/lib/redis/6379/appendonly.aof

		AOF文件记录写操作的方式? 

		把文件恢复到最后一次的正确操作? 
			]# redis-check-aof  --fix  appendonly.aof

	        使用 aof文件恢复数据

		50]# cp  appendolny.aof   /root/
		     scp  /root/appendolny.aof  root@192.168.4.52:/tmp/


		52  ]# /etc/init.d/redis_6379 stop
		    ]# vim /etc/redis/6379.conf
			appendonly yes
		   :wq
		    ]# cp /tmp/appendolny.aof  /var/lib/redis/6379/
		    ]# /etc/init.d/redis_6379 start
		    ]# redis-cli  -h  192.168.4.52 -p 6352
		    > keys *

	Redis 数据类型
			字符串管理命令   set  mset  setrange   
					 get  mget  getrange
					 strlen   append 
					 setbit   bitcount
					 decr   decrby  
					 incr   incrby  incrbyfloat

			List列表:是字符队列 一个key可以有多个值  先进后出
				 命令:
					lpush  llen  lrange  lpop  lindex lset
					rpush                rpop

				   
			Hash表:是一个string类型的field和value的映射表
			       一个key可对应多个field，一个field对应一个value
				将一个对象存储为hash类型，较于每个字段都存储成string类型更				  能节省内存
				命令:
					hset  hmset
					hgetall hkeys  hvals 
					hget  hmget
					hdel

+++++++++++++++++++++NoSQL_DAY04
		]# scp  -r   mongodb root@192.168.4.50:/root/
			11:20
1 部署MongoDB服务
	1.1 MongoDB介绍
	1.2
	1.3 部署MongoDB服务 (192.168.4.50)
		1.3.1  装包
			]#mkdir /usr/local/mongodb
			]#tar -zxvf mongodb-linux-x86_64-rhel70-3.6.3.tgz 
			]#cp -r mongodb-linux-x86_64-rhel70-3.6.3/bin  /usr/local/mongodb/
			]#cd /usr/local/mongodb/
			]#mkdir etc
			]#mkdir log
			]#mkdir -p data/db
			]# ls /usr/local/mongodb/
			   bin  data  etc  log

		1.3.2 手动创建服务主配置文件
			]# vim /usr/local/mongodb/etc/mongodb.conf
				logpath=/usr/local/mongodb/log/mongodb.log
				logappend=true
				dbpath=/usr/local/mongodb/data/db
				fork=true
			:wq
		1.3.3  启动服务
]# /usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf
about to fork child process, waiting until server is ready for connections.
forked process: 25625
child process started successfully, parent exiting

		1.3.4 查看端口 
]# netstat -utnlp  | grep  :27017
tcp        0      0 127.0.0.1:27017       0.0.0.0:*         LISTEN      25625/mongod        
               1.3.5 停止服务

		[root@host50 mongodb]# /usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf  --shutdown
killing process with pid: 25625
[root@host50 mongodb]# 

		1.3.6 定义命令别名
]# alias mstop='/usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf  --shutdown'

]# alias mstart='/usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf'

]# vim ~/.bashrc
alias mstop='/usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf  --shutdown'

alias mstart='/usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf'
:wq

	1.3.7 连接服务
		]# /usr/local/mongodb/bin/mongo
		> show dbs
		 admin   0.000GB
		 config  0.000GB
		 local   0.000GB

		> use local
		> 
		> db
		  local
		> 
		> show tables
		  startup_log
		> 
		> exit
		   bye
		[root@host50 mongodb]# 

	1.3.8  修改服务使用的ip地址及端口号 
		]# mstop
		]# vim /usr/local/mongodb/etc/mongodb.conf
			port=27050
			bind_ip=192.168.4.50
		:wq
		]# mstart
		]# netstat -utnlp  | grep  :27050

		]# /usr/local/mongodb/bin/mongo --host 192.168.4.50  --port 27050
		> show dbs
		> exit

	1.3.9 练习 : 在主机192.168.4.51上部署MongoDB服务ip地址192.168.4.51  端口号27051
		     14:26

	1.3.10 
		     在主机192.168.4.52上部署MongoDB服务ip地址192.168.4.52  端口号27052
		     在主机192.168.4.53上部署MongoDB服务ip地址192.168.4.53  端口号27053

2 MongoDB基本使用
		2.1 常用管理命令
			数据库管理
			集合管理
			文档基本管理
> show dbs
> use gamedb
> db
> show tables
				> db.t1.save({name:"bob" , age:21 , mail:"bob@163.com"})
				> db.t1.save({name:"jim",school:"tarena"})
				> db.t1.find({name:"jack"})
		
		>db.t1.find()
		>db.t1.count()
		>db.t1.findOne()
					>db.t1.find({name:"bob"})
					>db.t1.remove({name:"bob"})

		>db.t1.find()
		>db.t1.remove({})
		>db.t1.count()

					> show tables
					> db.t1.drop()
					> db
					> db.dropDatabase()

		2.2 基本数据类型
			字符类型  db.user.save({name:"bob"})
				  db.user.save({班级:"nsd1812",姓名:"张三丰"})


			布尔bool  true  false
				   > db.user.save({name:"张大强", card:true , girl:false })
			
			空null
				   > db.user.save({name:"张大强", pay:null })

			数值
				   > db.user.save({name:"jack",age:19})
				   > db.user.save({name:"lucy",chengji:59.9})	

				   > db.user.save({y:NumberInt(3.45)})
		
				   > db.user.save({i:NumberLong(3.59)})
				   > db.user.save({i:NumberLong(3)})

			数组array
		> db.user.save({name:"jerry", likes:[ "film","game","music","eat"]   }) 

			 代码
> db.user.save({lname:"php" , script:function(){ /* <?php  echo "hello world" ?> */}})

			 日期
				> db.user.save({name:"hamm",birthday:"2019-11-20"})
				> db.user.save({name:"lll",birthday:new Date()})

			 对象
				> db.t2.save({name:"mark",num:ObjectId()})
				> db.t2.find()

			 内嵌
	> db.t3.save({ tarena:{addr:"bj" ,zc:100000000 ,gm:10000,tel:"888888"}})

			 正则表达式
				> db.t4.save({gn:"kh",bds:/^$/ })
	  16:05
16:20 

		2.3 数据导入导出  
			2.3.1 数据导出
				格式1:（csv格式）
]# mongoexport  --host  IP地址  --port  端口   -库名  -c  集合名  -q  '{条件}'  -f  字段名1,字段名2  --type=csv  >  目录名/文件名.csv
				
				例子：
			]# /usr/local/mongodb/bin/mongoexport --host 192.168.4.50 --port 27050 -d gamedb -c user -f  name,age   --type=csv  > /tmp/user.csv

				查看文件内容
			]# cat /tmp/user.csv

				格式2:（json格式）
]# mongoexport  --host  IP地址  --port  端口   -库名  -c  集合名 [ -q  '{条件}'  -f  字段名1,字段名2 ] --type=json  >  目录名/文件名.json

				例子：
]# /usr/local/mongodb/bin/mongoexport  --host  192.168.4.50 --port 27050  -d  gamedb  -c t2  --type=json  >  /tmp/t2.json

				查看文件内容
			]# cat /tmp/t2.json

		]# scp /tmp/user.csv  root@192.168.4.51:/root/
		]# scp /tmp/t2.json  root@192.168.4.51:/root/

			2.3.2 数据导入
				格式1:（json格式）
]# mongoimport --host  IP地址 --port  端口 -d  库名 –c  集合名 --type=json    目录名/文件名.json
				例子：
		]# cd /usr/local/mongodb/
		]# ./mongoimport  --host 192.168.4.51 --port 27051 -d gamedb -c usera \
  		    --type=json /root/t2.json
 
		]# ./mongo --host 192.168.4.51 --port 27051
		> show dbs

			       格式2:（csv格式）
]# mongoimport  --host  IP地址  --port  端口  -d  库名  -c  集合名  --type=csv  [--headerline]  [--drop]  目录名/文件名.csv

				
				]# ./mongoimport  --host  192.168.4.51 --port 2705  -d gamedb  -c userb  --type=csv  --headerline --drop /root/user.csv

		休息到 17：20
把系统文件/etc/passwd 文件的内容存储到50主机的userdb库下的user集合里。
 	]# cp /etc/passwd  /root/

  	]# sed -i  's/:/,/g' /root/passwd 
  	]#  sed -i  '1iname,password,uid,gid,comment,homedir,shell' /root/passwd 

  	]# /usr/local/mongodb/bin/mongoimport --host 192.168.4.50 --port 27050 \
	  -d userdb -c user  --type=csv  --headerline  /root/passwd 

  	]# /usr/local/mongodb/bin/mongo --host 192.168.4.50 --port 27050
	> show dbs
	> use userdb
	> show tables
	> db.user.count()
	> db.user.find()
				17:45
		
			2.4 数据备份与恢复
				2.4.1 数据备份命令
]# mongodump  [ --host  ip地址  --port  端口 ]
]# mongodump  [ --host  ip地址  --port  端口 ]  -d  库
]# mongodump  [ --host  ip地址  --port  端口 ]  -d  库 -c 集合名

]# mkdir /目录名

]# mongodump  [ --host  ip地址  --port  端口 ]  -d  库 -c 集合名  -o /目录名




				2.4.2 数据恢复命令
# mongorestore --host  IP地址 --port  端口 [ -d  数据库名]  [ -c 集合名]  备份目录名

				2.4.3 例子：
]# cd /root/
]# /usr/local/mongodb/bin/mongodump  --host 192.168.4.50 --port 27050
]# ls dump
]# /usr/local/mongodb/bin/bsondump  /root/dump/userdb/user.bson 

]# mkdir /mdbbak

]# /usr/local/mongodb/bin/mongodump --host 192.168.4.50 --port 27050 -d userdb -c user  -o /mdbbak

]# ls /mdbbak/userdb/

]# scp  -r /mdbbak/userdb  root@192.168.4.51:/root/


192.168.4.51
]# cd /usr/local/mongodb/bin
]# ./mongorestore  --host 192.168.4.51 --port 27051 -d userdb -c user /root/userdb/user.bson 

]# ./mongo  --host 192.168.4.51 --port 27051

++++++++++++++NoSQL_day05+++++++++++++
1 MongoDB副本集
	1.1 MongoDB副本集介绍	
	1.2 MongoDB副本集工作模式	
	1.3 MongoDB副本集过程
	1.4 配置MongoDB副本集
		1.4.1  在所有服务器上启用副本集功能并定义名称
			]# vim  /usr/local/mongodb/etc/mongodb.conf
				replSet=rs1
			:wq
	]# /usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf --shutdown
		]# /usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf
		
		1.4.2 创建副本集成员列表
]# /usr/local/mongodb/bin/mongo  --host  192.168.4.51  --port 27051
config = {
_id:"rs1", 
members:[
    {_id:0,host:"192.168.4.51:27051"},
    {_id:1,host:"192.168.4.52:27052"},
    {_id:2,host:"192.168.4.53:27053"}
]
}
		1.4.3 初始化集群

> rs.initiate(config)
{
	"ok" : 1,
	"operationTime" : Timestamp(1551677014, 1),
	"$clusterTime" : {
		"clusterTime" : Timestamp(1551677014, 1),
		"signature" : {
			"hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
			"keyId" : NumberLong(0)
		}
	}
}
rs1:SECONDARY> 
rs1:PRIMARY>
		> rs.isMaster()      10:46 
		> rs.status()
	连接从库查看数据
		> rs.isMaster()
		> rs.status()
		> db.getMongo().setSlaveOk() //允许对数据做操作
		> show dbs
      51 /  52 / 53
      ]#vim /usr/local/mongodb/etc/mongodb.conf
	   #replSet=rs1
       :wq
     ]# /usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf --shutdown
     ]# /usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf
     ]# /usr/local/mongodb/bin/mongo  --host  192.168.4.51/52/53  --port 27051/52/53
	> use local
	>db.dropDatabase()
	>exit
     ]#vim /usr/local/mongodb/etc/mongodb.conf
           replSet=rs1
       :wq
     ]# /usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf --shutdown
     ]# /usr/local/mongodb/bin/mongod -f /usr/local/mongodb/etc/mongodb.conf
     ]# /usr/local/mongodb/bin/mongo  --host  192.168.4.51 --port 27051
> config = {
_id:"rs1",
members:[
    {_id:0,host:"192.168.4.51:27051"},
    {_id:1,host:"192.168.4.52:27052"},
    {_id:2,host:"192.168.4.53:27053"}
]
} 
> rs.initiate(config)

		1.4.5 测试集群
			1.4.5.1 复制功能
			1.4.5.2 高可用功能
			1.4.5.3 故障自动恢复
			1.4.5.4 高可用功能时，从多个副本主机选举新主库的过程

               11:35 上课 
2 文档管理
	2.1 查询文档 find() 
		     find({条件})
		     find({条件},{定义显示的字段})
		     findOne()
		     find().count()
		     find().sort()
		     find().skip()
		     find().limit(数字)
> use userdb
> db.user.find().count()
> db.user.find({shell:"/sbin/nologin"}).count()
> db.user.find({shell:"/bin/bash"},{_id:0 , name:1 , shell:1 })
> db.user.find({},{_id:0 , name:1 , shell:1 })
> db.user.find({},{_id:0 , name:1 , shell:1 }).limit(5)
> db.user.find({},{_id:0 , name:1 , shell:1 ,uid:1 }).skip(3)

> db.user.findOneer.find({},{_id:0 , name:1 ,uid:1 }).sort({uid:-1}))
> db.user.find({},{_id:0 , name:1 ,uid:1 }).sort({uid:1})

	2.2 更新文档 update({条件},{$set:{修改的字段}},false,true）
		命令 $set  $unset  $inc  $push  $addToSet  $pop  $pull 


> db.t3.save({name:"bob",likes:["a","b","c","d","e"]})
> db.t3.find({},{_id:0});

> db.t3.update({name:"bob"},{$push:{likes:"eat"}}) 添加新元素（重复添加）
> db.t3.update({name:"bob"},{$push:{likes:"eat"}})
> db.t3.find({},{_id:0});

> db.t3.update({name:"bob"},{$addToSet:{likes:"game"}}) 添加新元素（不允许重复添加）
> db.t3.update({name:"bob"},{$addToSet:{likes:"game"}})
> db.t3.find({},{_id:0});

> db.t3.update({name:"bob"},{$pop:{likes:1}}) 删除数组尾部元素
> db.t3.update({name:"bob"},{$pop:{likes:-1}}) 删除数组头部元素
> db.t3.find({},{_id:0});

> db.t3.update({name:"bob"},{$pull:{likes:"b"}})  删除数组中的指定元素
> db.t3.update({name:"bob"},{$pull:{likes:"eat"}})

> db.user.update({uid:{$lte:10}},{$inc:{uid:+2}},false,true)  字段值 自加计算

> db.user.find({uid:{$lte:10}},{_id:0,name:1,uid:1})   

> db.user.update({uid:{$lte:10}},{$inc:{uid:-1}},false,true)  字段值 自减计算
     16：55

> db.user.find({shell:"/sbin/nologin"},{_id:0})

> db.user.update({shell:"/sbin/nologin"},{ $set:{ gid:1010 ,comment:"student user"}},false,true)

> db.user.find({shell:"/sbin/nologin"},{_id:0})
> db.user.find({shell:"/sbin/nologin"},{_id:0, shell:1, gid:1 , comment:1 })


> db.user.update({uid:2},{ $unset:{comment:"student user"}},false,true)
> db.user.find({uid:2},{_id:0})

	2.3 插入文档  save()  insert()  insertMany()
> use userdb  
> db.t1.save({_id:1,name:"bob"})
> db.t2.insert({_id:1,name:"jim"})

>db.t1.save({_id:1,name:"jack"}) 修改
>db.t1.find()

> db.t2.insert({_id:1,name:"admin"}) 放弃插入
> db.t2.find()

>db.t1.save({_id:2,name:"jack"})   插入文档
>db.t2.insert({_id:2,name:"jack"}) 插入文档

> db.t2.insertMany([{name:"bob",age:19},{age:21,sex:"girl",name:"lucy"}]) 插入多条记录

	2.4 删除文档 
			remove({}) 
			remove({条件})
	>db.t1.remove({})
	>db.t2.remove({name:"bob"})
	>db.t1.find()
	>db.t2.find()

	
	2.5 更新/删除/查询文档匹配条件
	相等
	  > db.user.find({ name:"sync"},{_id:0,name:1,gid:1})

	逻辑与比较
	  > db.user.find({ name:"sync" , gid:1 },{_id:0,name:1,gid:1})

	逻辑或比较 $or

	> db.user.find({ $or:[{uid:10},{uid:3} , {name:"ftp"}]},{ _id:0 })

	范围比较 $in  $nin 
	
	 > db.user.find({ uid:{ $in:[1,3,7]}},{_id:0,name:1,uid:1})

	 >db.user.find({ shell:{$nin:["/bin/bash","/sbin/nologin"]} },{_id:0,name:1,shell:1})

         数值比较
		>    >=    <    <=    !=    
		$gt  $gte  $lt  $lte  $ne

	> db.user.find({uid:{$gte:100}},{_id:0,name:1,uid:1})
	> db.user.find({uid:{$lte:100}},{_id:0,name:1,uid:1})

	> db.user.find({uid:{$gte:100 ,$lte:200 }},{_id:0,name:1,uid:1})

        正则匹配
	> db.user.find({name:/a/},{_id:0,name:1})
	> db.user.find({name:/^a/},{_id:0,name:1})
	> db.user.find({name:/[0-9]/},{_id:0,name:1})

        匹配null
	> db.user.save({name:null,uid:99,gid:88})
        > db.user.find({name:null},{_id:0})
+++++++++++++++++NoSQL知识点总结+++++++++++++++++++++++++++++++++++
部署MongoDB数据库服务   基本使用  数据类型   数据导入  数据导出  备份与恢复
部署MongoDB副本集	管理文档  （插入 更新 查询  删除）
project-4.txt  综合实验需求 周六

2019-04-01  ++++++++安全与监控++++++++++++++
系统安全  服务安全  数据安全  网络安全  监   控

+++++++++++++++day01
1 Linux基本防护
		1.1 账户安全
			与用户相关的命令
				useradd  usermod  userdel  passwd  id  chage
			与用户相关的匹配文件
				/etc/passwd  /etc/shadow  /etc/login.defs  /etc/skel/
		1.2 伪装登录提示
			vim  /etc/issue  本地
			vim  /etc/issue.net	远程登录	

		1.3 文件系统安全
			chattr  lsattr
			属性i：不可变（immutable）
			属性a：仅可追加（append only）
		1.4 禁用非必要的系统服务
			RHEL7  systemctl disable  服务名                                
			RHEL6  chkconfig  服务名 off

			systemctl disable httpd
			chkconfig httpd off
			
			systemctl enable httpd
			chkconfig httpd on
	休息到 10：08
	练习 案例 1    15分钟 到  10：25

2 用户切换与提权
	2.1 su 用户切换
		格式 ： su [ - ] 用户
			su  -

			root  ------> 普通用户名
			root  <------ 普通用户名
			普通用户名 <-----> 普通用户名
			
			]# su  - -c "命令"  root  （必须要知道root用户密码）			
			/var/log/secure 记录su验证、Shell开启与关闭

	2.2 sudo  用户提权
			2.2.1 介绍： 让普通用户登陆系统后可以执行root用户的命令
			2.2.2 命令的使用：
				用户查看可以使用的提权命令
				        sudo -l
				用户执行提权命令
					sudo 提权命令

			2.2.3 用户提权
			      ]# visudo

			      ]# vim /etc/sudoers  
	普通用户	主机名列表=命令列表 （使用命令的绝对路径），NOPASSWD：ALL		   %用户组名	主机名列表=命令列表 （使用命令的绝对路径）， NOPASSWD：ALL
			      :wq! 
		
       ]# vim /etc/sudoers
	  # %wheel ALL=(ALL)      ALL
       :wq!
			2.3 例子
			        11：20 上课
  931  useradd dachui
  932  useradd tiechui
  933  useradd niuben
  934  echo 123456  | passwd --stdin  dachui
  935  echo 123456  | passwd --stdin  tiechui
  936  echo 123456  | passwd --stdin  niuben



]# vim /etc/sudoers
dachui 	localhost,host50=/usr/bin/rpm , /usr/bin/yum , /usr/bin/systemctl *  httpd , /usr/bin/vim  /etc/httpd/conf/httpd.conf

tiechui  localhost,host50=/usr/bin/rpm , /usr/bin/yum , /usr/bin/systemctl *  mysqld ,/usr/bin/vim  /etc/my.cnf

niuben  localhost,host50=/usr/bin/rpm , /usr/bin/yum , /usr/bin/systemctl *  httpd , /usr/bin/vim  /etc/httpd/conf/httpd.conf , /usr/bin/systemctl *  mysqld ,/usr/bin/vim  /etc/my.cnf

mike    localhost,host50=/sbin/*, !/sbin/ifconfig  eth0

Defaults  logfile="/var/log/sudo"	//启用日志
	
:wq!


udo别名设置
		
Host_Alias MYSER=localhost,host50
Cmnd_Alias MYCMD=/usr/bin/rpm, /usr/bin/yum

dachui  MYSER=MYCMD, /usr/bin/systemctl *  httpd , /usr/bin/vim  /etc/httpd/conf/httpd.conf

tiechui  MYSER=MYCMD, /usr/bin/systemctl *  mysqld ,/usr/bin/vim  /etc/my.cnf

niuben  MYSER=MYCMD , /usr/bin/systemctl *  httpd , /usr/bin/vim  /etc/httpd/conf/httpd.conf , /usr/bin/systemctl *  mysqld ,/usr/bin/vim  /etc/my.cnf


3 SSH访问控制
	修改服务使用的Ip地址及端口号
	]# vim /etc/ssh/sshd_config
		17 Port 2222
		19 ListenAddress 192.168.4.50
	:wq
	]# systemctl  restart  sshd
	]# netstat  -utnlp  | grep  :2222	

	客户端连接 指定端口号
	]# ssh  -p 2222   root@192.168.4.50

	]# ssh  -p 2222   dachui@192.168.4.50

	白名单 仅允许列表里的用户连接ssh服务
		AllowUsers   用户名列表
		AllowGroups  用户组名列表

	黑名单 在列表里的用户不允许连接ssh服务
	       DenyUsers   用户名列表
	       DenyGroups  用户组名列表

	白名单	
	]# vim /etc/ssh/sshd_config
	  AllowUsers  root@192.168.4.254  niuben
	:wq	
	]# systemctl  restart  sshd

	黑名单
	]# vim /etc/ssh/sshd_config
	 #AllowUsers  root@192.168.4.254  niuben
	  DenyUsers       niuben  dachui
	:wq
	]# systemctl  restart  sshd

	清除以上配置 重启sshd服务
	]# vim /etc/ssh/sshd_config
		#Port 2222
		#ListenAddress 192.168.4.50
		#AllowUsers  root@192.168.4.254  niuben
          	#DenyUsers       niuben  dachui
	:wq
	]# systemctl  restart  sshd
	]# netstat  -utnlp  | grep  :22
	
	配置仅允许密钥对方式验证连接
	254
		]# ssh-keygen
		]# ssh-copy-id  root@192.168.4.50

	50
		]# vim /etc/ssh/sshd_config
		   PasswordAuthentication   no 
	   	:wq
		]# systemctl  restart sshd

	254
		]# ssh  root@192.168.4.50 可以连且不需要输入密码，其他用户不			允许连接
4 SELinux安全防护
	4.1 SELinux介绍	

	4.2 查看安全上下文（打标签）
		文件  ls  -lZ 文件名
		目录  ls  -ldZ 目录名
		进程  ps aux -Z |grep  -i  进程名 
]# ls -lZ /etc/passwd
]# ls -ldZ /etc

]# yum  -y  install  httpd
]# systemctl  start httpd
]# ps aux  | grep  -i httpd
]# ps aux -Z | grep  -i httpd

用户:角色:访问类型:选项...
system_u:object_r:passwd_file_t:s0
system_u:object_r:etc_t:s0
system_u:system_r:httpd_t:s0

	一般操作规律
		移动的文件，原有的上下文属性不变
		创建文件或复制的文件，会自动继承目标位置的上下文

	57]# vim /var/www/html/a.html
		aaaaaa
	     :wq

	     vim /root/b.html
		bbbbb
	     :wq
	    mv  /root/b.html  /var/www/html/
	    ]# ls -ldZ /var/www/html
	    ]# ls -lZ  /var/www/html
	
	254 firefox  http://192.168.4.57/a.html 可以
	    firefox  http://192.168.4.57/b.html 报错

	修改访问类型
		]# chcon -t 访问类型 文件名
		]# chcon -t httpd_sys_content_t /var/www/html/b.html

		]# chcon -R -t httpd_sys_content_t /var/www/html		
	或

	恢复访问类型
		]# restorecon 文件名
		]# restorecon /var/www/html/b.html

		]# restorecon -R /var/www/html

	调整SELinux布尔值 (功能开关)
			



	在开启设为enforcing 允许匿名用户访问ftp服务，对/var/ftp/sharedir目录有上传文件和下载文件的权限。
	187  yum  -y  install vsftpd	

	]# vim +29 /etc/vsftpd/vsftpd.conf
	   29 anon_upload_enable=YES
	:wq

	 190  mkdir /var/ftp/sharedir
 	 191  chown  o+w /var/ftp/sharedir/
  	  192  chmod  o+w /var/ftp/sharedir/
  	193  systemctl  start vsftpd
  	194  systemctl  enable vsftpd
  	195  cp /etc/passwd /var/ftp/sharedir/

host58 ~]# yum  -y  install ftp
